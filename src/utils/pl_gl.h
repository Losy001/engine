// OpenGL 1.5 header generated by pengol

#ifndef PENGOL_H
#define PENGOL_H

#define __gl_h_

#ifdef _WIN32
#ifdef APIENTRY
#undef APIENTRY
#endif
#define APIENTRY __stdcall
#endif

#ifndef APIENTRY
#define APIENTRY
#endif

#ifndef APIENTRYP
#define APIENTRYP APIENTRY*
#endif

#ifndef GLAPIENTRY
#define GLAPIENTRY APIENTRY
#endif

#ifndef GLAPI
#define GLAPI extern
#endif

#ifdef _WIN32
#include <windows.h>
#else
#error Unix is not supported at the moment
#endif

typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef int GLsizei;
typedef GLsizei* GLsizeiptr;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void GLvoid;
typedef char GLchar;
typedef signed char GLbyte;
typedef signed short GLshort;
typedef int GLint;
typedef GLint* GLintptr;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;

#ifdef __cplusplus
extern "C"
{
#endif

#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_FALSE 0
#define GL_TRUE 1
#define GL_POINTS 0x0000
#define GL_LINES 0x0001
#define GL_LINE_LOOP 0x0002
#define GL_LINE_STRIP 0x0003
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_FAN 0x0006
#define GL_QUADS 0x0007
#define GL_NEVER 0x0200
#define GL_LESS 0x0201
#define GL_EQUAL 0x0202
#define GL_LEQUAL 0x0203
#define GL_GREATER 0x0204
#define GL_NOTEQUAL 0x0205
#define GL_GEQUAL 0x0206
#define GL_ALWAYS 0x0207
#define GL_ZERO 0
#define GL_ONE 1
#define GL_SRC_COLOR 0x0300
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_SRC_ALPHA 0x0302
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_DST_ALPHA 0x0304
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_DST_COLOR 0x0306
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_NONE 0
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_FRONT 0x0404
#define GL_BACK 0x0405
#define GL_LEFT 0x0406
#define GL_RIGHT 0x0407
#define GL_FRONT_AND_BACK 0x0408
#define GL_NO_ERROR 0
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_VALUE 0x0501
#define GL_INVALID_OPERATION 0x0502
#define GL_OUT_OF_MEMORY 0x0505
#define GL_CW 0x0900
#define GL_CCW 0x0901
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_FRONT_FACE 0x0B46
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_FUNC 0x0B74
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_VIEWPORT 0x0BA2
#define GL_DITHER 0x0BD0
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND 0x0BE2
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_DRAW_BUFFER 0x0C01
#define GL_READ_BUFFER 0x0C02
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_DOUBLEBUFFER 0x0C32
#define GL_STEREO 0x0C33
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_2D 0x0DE1
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_DONT_CARE 0x1100
#define GL_FASTEST 0x1101
#define GL_NICEST 0x1102
#define GL_BYTE 0x1400
#define GL_UNSIGNED_BYTE 0x1401
#define GL_SHORT 0x1402
#define GL_UNSIGNED_SHORT 0x1403
#define GL_INT 0x1404
#define GL_UNSIGNED_INT 0x1405
#define GL_FLOAT 0x1406
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_CLEAR 0x1500
#define GL_AND 0x1501
#define GL_AND_REVERSE 0x1502
#define GL_COPY 0x1503
#define GL_AND_INVERTED 0x1504
#define GL_NOOP 0x1505
#define GL_XOR 0x1506
#define GL_OR 0x1507
#define GL_NOR 0x1508
#define GL_EQUIV 0x1509
#define GL_INVERT 0x150A
#define GL_OR_REVERSE 0x150B
#define GL_COPY_INVERTED 0x150C
#define GL_OR_INVERTED 0x150D
#define GL_NAND 0x150E
#define GL_SET 0x150F
#define GL_TEXTURE 0x1702
#define GL_COLOR 0x1800
#define GL_DEPTH 0x1801
#define GL_STENCIL 0x1802
#define GL_STENCIL_INDEX 0x1901
#define GL_DEPTH_COMPONENT 0x1902
#define GL_RED 0x1903
#define GL_GREEN 0x1904
#define GL_BLUE 0x1905
#define GL_ALPHA 0x1906
#define GL_RGB 0x1907
#define GL_RGBA 0x1908
#define GL_POINT 0x1B00
#define GL_LINE 0x1B01
#define GL_FILL 0x1B02
#define GL_KEEP 0x1E00
#define GL_REPLACE 0x1E01
#define GL_INCR 0x1E02
#define GL_DECR 0x1E03
#define GL_VENDOR 0x1F00
#define GL_RENDERER 0x1F01
#define GL_VERSION 0x1F02
#define GL_EXTENSIONS 0x1F03
#define GL_NEAREST 0x2600
#define GL_LINEAR 0x2601
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_REPEAT 0x2901
#define GL_CURRENT_BIT 0x00000001
#define GL_POINT_BIT 0x00000002
#define GL_LINE_BIT 0x00000004
#define GL_POLYGON_BIT 0x00000008
#define GL_POLYGON_STIPPLE_BIT 0x00000010
#define GL_PIXEL_MODE_BIT 0x00000020
#define GL_LIGHTING_BIT 0x00000040
#define GL_FOG_BIT 0x00000080
#define GL_ACCUM_BUFFER_BIT 0x00000200
#define GL_VIEWPORT_BIT 0x00000800
#define GL_TRANSFORM_BIT 0x00001000
#define GL_ENABLE_BIT 0x00002000
#define GL_HINT_BIT 0x00008000
#define GL_EVAL_BIT 0x00010000
#define GL_LIST_BIT 0x00020000
#define GL_TEXTURE_BIT 0x00040000
#define GL_SCISSOR_BIT 0x00080000
#define GL_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_QUAD_STRIP 0x0008
#define GL_POLYGON 0x0009
#define GL_ACCUM 0x0100
#define GL_LOAD 0x0101
#define GL_RETURN 0x0102
#define GL_MULT 0x0103
#define GL_ADD 0x0104
#define GL_AUX0 0x0409
#define GL_AUX1 0x040A
#define GL_AUX2 0x040B
#define GL_AUX3 0x040C
#define GL_2D 0x0600
#define GL_3D 0x0601
#define GL_3D_COLOR 0x0602
#define GL_3D_COLOR_TEXTURE 0x0603
#define GL_4D_COLOR_TEXTURE 0x0604
#define GL_PASS_THROUGH_TOKEN 0x0700
#define GL_POINT_TOKEN 0x0701
#define GL_LINE_TOKEN 0x0702
#define GL_POLYGON_TOKEN 0x0703
#define GL_BITMAP_TOKEN 0x0704
#define GL_DRAW_PIXEL_TOKEN 0x0705
#define GL_COPY_PIXEL_TOKEN 0x0706
#define GL_LINE_RESET_TOKEN 0x0707
#define GL_EXP 0x0800
#define GL_EXP2 0x0801
#define GL_COEFF 0x0A00
#define GL_ORDER 0x0A01
#define GL_DOMAIN 0x0A02
#define GL_PIXEL_MAP_I_TO_I 0x0C70
#define GL_PIXEL_MAP_S_TO_S 0x0C71
#define GL_PIXEL_MAP_I_TO_R 0x0C72
#define GL_PIXEL_MAP_I_TO_G 0x0C73
#define GL_PIXEL_MAP_I_TO_B 0x0C74
#define GL_PIXEL_MAP_I_TO_A 0x0C75
#define GL_PIXEL_MAP_R_TO_R 0x0C76
#define GL_PIXEL_MAP_G_TO_G 0x0C77
#define GL_PIXEL_MAP_B_TO_B 0x0C78
#define GL_PIXEL_MAP_A_TO_A 0x0C79
#define GL_CURRENT_COLOR 0x0B00
#define GL_CURRENT_INDEX 0x0B01
#define GL_CURRENT_NORMAL 0x0B02
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#define GL_CURRENT_RASTER_COLOR 0x0B04
#define GL_CURRENT_RASTER_INDEX 0x0B05
#define GL_CURRENT_RASTER_TEXTURE_COORDS 0x0B06
#define GL_CURRENT_RASTER_POSITION 0x0B07
#define GL_CURRENT_RASTER_POSITION_VALID 0x0B08
#define GL_CURRENT_RASTER_DISTANCE 0x0B09
#define GL_POINT_SMOOTH 0x0B10
#define GL_LINE_STIPPLE 0x0B24
#define GL_LINE_STIPPLE_PATTERN 0x0B25
#define GL_LINE_STIPPLE_REPEAT 0x0B26
#define GL_LIST_MODE 0x0B30
#define GL_MAX_LIST_NESTING 0x0B31
#define GL_LIST_BASE 0x0B32
#define GL_LIST_INDEX 0x0B33
#define GL_POLYGON_STIPPLE 0x0B42
#define GL_EDGE_FLAG 0x0B43
#define GL_LIGHTING 0x0B50
#define GL_LIGHT_MODEL_LOCAL_VIEWER 0x0B51
#define GL_LIGHT_MODEL_TWO_SIDE 0x0B52
#define GL_LIGHT_MODEL_AMBIENT 0x0B53
#define GL_SHADE_MODEL 0x0B54
#define GL_COLOR_MATERIAL_FACE 0x0B55
#define GL_COLOR_MATERIAL_PARAMETER 0x0B56
#define GL_COLOR_MATERIAL 0x0B57
#define GL_FOG 0x0B60
#define GL_FOG_INDEX 0x0B61
#define GL_FOG_DENSITY 0x0B62
#define GL_FOG_START 0x0B63
#define GL_FOG_END 0x0B64
#define GL_FOG_MODE 0x0B65
#define GL_FOG_COLOR 0x0B66
#define GL_ACCUM_CLEAR_VALUE 0x0B80
#define GL_MATRIX_MODE 0x0BA0
#define GL_NORMALIZE 0x0BA1
#define GL_MODELVIEW_STACK_DEPTH 0x0BA3
#define GL_PROJECTION_STACK_DEPTH 0x0BA4
#define GL_TEXTURE_STACK_DEPTH 0x0BA5
#define GL_MODELVIEW_MATRIX 0x0BA6
#define GL_PROJECTION_MATRIX 0x0BA7
#define GL_TEXTURE_MATRIX 0x0BA8
#define GL_ATTRIB_STACK_DEPTH 0x0BB0
#define GL_ALPHA_TEST 0x0BC0
#define GL_ALPHA_TEST_FUNC 0x0BC1
#define GL_ALPHA_TEST_REF 0x0BC2
#define GL_LOGIC_OP 0x0BF1
#define GL_AUX_BUFFERS 0x0C00
#define GL_INDEX_CLEAR_VALUE 0x0C20
#define GL_INDEX_WRITEMASK 0x0C21
#define GL_INDEX_MODE 0x0C30
#define GL_RGBA_MODE 0x0C31
#define GL_RENDER_MODE 0x0C40
#define GL_PERSPECTIVE_CORRECTION_HINT 0x0C50
#define GL_POINT_SMOOTH_HINT 0x0C51
#define GL_FOG_HINT 0x0C54
#define GL_TEXTURE_GEN_S 0x0C60
#define GL_TEXTURE_GEN_T 0x0C61
#define GL_TEXTURE_GEN_R 0x0C62
#define GL_TEXTURE_GEN_Q 0x0C63
#define GL_PIXEL_MAP_I_TO_I_SIZE 0x0CB0
#define GL_PIXEL_MAP_S_TO_S_SIZE 0x0CB1
#define GL_PIXEL_MAP_I_TO_R_SIZE 0x0CB2
#define GL_PIXEL_MAP_I_TO_G_SIZE 0x0CB3
#define GL_PIXEL_MAP_I_TO_B_SIZE 0x0CB4
#define GL_PIXEL_MAP_I_TO_A_SIZE 0x0CB5
#define GL_PIXEL_MAP_R_TO_R_SIZE 0x0CB6
#define GL_PIXEL_MAP_G_TO_G_SIZE 0x0CB7
#define GL_PIXEL_MAP_B_TO_B_SIZE 0x0CB8
#define GL_PIXEL_MAP_A_TO_A_SIZE 0x0CB9
#define GL_MAP_COLOR 0x0D10
#define GL_MAP_STENCIL 0x0D11
#define GL_INDEX_SHIFT 0x0D12
#define GL_INDEX_OFFSET 0x0D13
#define GL_RED_SCALE 0x0D14
#define GL_RED_BIAS 0x0D15
#define GL_ZOOM_X 0x0D16
#define GL_ZOOM_Y 0x0D17
#define GL_GREEN_SCALE 0x0D18
#define GL_GREEN_BIAS 0x0D19
#define GL_BLUE_SCALE 0x0D1A
#define GL_BLUE_BIAS 0x0D1B
#define GL_ALPHA_SCALE 0x0D1C
#define GL_ALPHA_BIAS 0x0D1D
#define GL_DEPTH_SCALE 0x0D1E
#define GL_DEPTH_BIAS 0x0D1F
#define GL_MAX_EVAL_ORDER 0x0D30
#define GL_MAX_LIGHTS 0x0D31
#define GL_MAX_CLIP_PLANES 0x0D32
#define GL_MAX_PIXEL_MAP_TABLE 0x0D34
#define GL_MAX_ATTRIB_STACK_DEPTH 0x0D35
#define GL_MAX_MODELVIEW_STACK_DEPTH 0x0D36
#define GL_MAX_NAME_STACK_DEPTH 0x0D37
#define GL_MAX_PROJECTION_STACK_DEPTH 0x0D38
#define GL_MAX_TEXTURE_STACK_DEPTH 0x0D39
#define GL_INDEX_BITS 0x0D51
#define GL_RED_BITS 0x0D52
#define GL_GREEN_BITS 0x0D53
#define GL_BLUE_BITS 0x0D54
#define GL_ALPHA_BITS 0x0D55
#define GL_DEPTH_BITS 0x0D56
#define GL_STENCIL_BITS 0x0D57
#define GL_ACCUM_RED_BITS 0x0D58
#define GL_ACCUM_GREEN_BITS 0x0D59
#define GL_ACCUM_BLUE_BITS 0x0D5A
#define GL_ACCUM_ALPHA_BITS 0x0D5B
#define GL_NAME_STACK_DEPTH 0x0D70
#define GL_AUTO_NORMAL 0x0D80
#define GL_MAP1_COLOR_4 0x0D90
#define GL_MAP1_INDEX 0x0D91
#define GL_MAP1_NORMAL 0x0D92
#define GL_MAP1_TEXTURE_COORD_1 0x0D93
#define GL_MAP1_TEXTURE_COORD_2 0x0D94
#define GL_MAP1_TEXTURE_COORD_3 0x0D95
#define GL_MAP1_TEXTURE_COORD_4 0x0D96
#define GL_MAP1_VERTEX_3 0x0D97
#define GL_MAP1_VERTEX_4 0x0D98
#define GL_MAP2_COLOR_4 0x0DB0
#define GL_MAP2_INDEX 0x0DB1
#define GL_MAP2_NORMAL 0x0DB2
#define GL_MAP2_TEXTURE_COORD_1 0x0DB3
#define GL_MAP2_TEXTURE_COORD_2 0x0DB4
#define GL_MAP2_TEXTURE_COORD_3 0x0DB5
#define GL_MAP2_TEXTURE_COORD_4 0x0DB6
#define GL_MAP2_VERTEX_3 0x0DB7
#define GL_MAP2_VERTEX_4 0x0DB8
#define GL_MAP1_GRID_DOMAIN 0x0DD0
#define GL_MAP1_GRID_SEGMENTS 0x0DD1
#define GL_MAP2_GRID_DOMAIN 0x0DD2
#define GL_MAP2_GRID_SEGMENTS 0x0DD3
#define GL_TEXTURE_COMPONENTS 0x1003
#define GL_TEXTURE_BORDER 0x1005
#define GL_AMBIENT 0x1200
#define GL_DIFFUSE 0x1201
#define GL_SPECULAR 0x1202
#define GL_POSITION 0x1203
#define GL_SPOT_DIRECTION 0x1204
#define GL_SPOT_EXPONENT 0x1205
#define GL_SPOT_CUTOFF 0x1206
#define GL_CONSTANT_ATTENUATION 0x1207
#define GL_LINEAR_ATTENUATION 0x1208
#define GL_QUADRATIC_ATTENUATION 0x1209
#define GL_COMPILE 0x1300
#define GL_COMPILE_AND_EXECUTE 0x1301
#define GL_2_BYTES 0x1407
#define GL_3_BYTES 0x1408
#define GL_4_BYTES 0x1409
#define GL_EMISSION 0x1600
#define GL_SHININESS 0x1601
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#define GL_COLOR_INDEXES 0x1603
#define GL_MODELVIEW 0x1700
#define GL_PROJECTION 0x1701
#define GL_COLOR_INDEX 0x1900
#define GL_LUMINANCE 0x1909
#define GL_LUMINANCE_ALPHA 0x190A
#define GL_BITMAP 0x1A00
#define GL_RENDER 0x1C00
#define GL_FEEDBACK 0x1C01
#define GL_SELECT 0x1C02
#define GL_FLAT 0x1D00
#define GL_SMOOTH 0x1D01
#define GL_S 0x2000
#define GL_T 0x2001
#define GL_R 0x2002
#define GL_Q 0x2003
#define GL_MODULATE 0x2100
#define GL_DECAL 0x2101
#define GL_TEXTURE_ENV_MODE 0x2200
#define GL_TEXTURE_ENV_COLOR 0x2201
#define GL_TEXTURE_ENV 0x2300
#define GL_EYE_LINEAR 0x2400
#define GL_OBJECT_LINEAR 0x2401
#define GL_SPHERE_MAP 0x2402
#define GL_TEXTURE_GEN_MODE 0x2500
#define GL_OBJECT_PLANE 0x2501
#define GL_EYE_PLANE 0x2502
#define GL_CLAMP 0x2900
#define GL_CLIP_PLANE0 0x3000
#define GL_CLIP_PLANE1 0x3001
#define GL_CLIP_PLANE2 0x3002
#define GL_CLIP_PLANE3 0x3003
#define GL_CLIP_PLANE4 0x3004
#define GL_CLIP_PLANE5 0x3005
#define GL_LIGHT0 0x4000
#define GL_LIGHT1 0x4001
#define GL_LIGHT2 0x4002
#define GL_LIGHT3 0x4003
#define GL_LIGHT4 0x4004
#define GL_LIGHT5 0x4005
#define GL_LIGHT6 0x4006
#define GL_LIGHT7 0x4007
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_DOUBLE 0x140A
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_R3_G3_B2 0x2A10
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB8 0x8051
#define GL_RGB10 0x8052
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGBA2 0x8055
#define GL_RGBA4 0x8056
#define GL_RGB5_A1 0x8057
#define GL_RGBA8 0x8058
#define GL_RGB10_A2 0x8059
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_CLIENT_PIXEL_STORE_BIT 0x00000001
#define GL_CLIENT_VERTEX_ARRAY_BIT 0x00000002
#define GL_CLIENT_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_VERTEX_ARRAY_POINTER 0x808E
#define GL_NORMAL_ARRAY_POINTER 0x808F
#define GL_COLOR_ARRAY_POINTER 0x8090
#define GL_INDEX_ARRAY_POINTER 0x8091
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#define GL_EDGE_FLAG_ARRAY_POINTER 0x8093
#define GL_FEEDBACK_BUFFER_POINTER 0x0DF0
#define GL_SELECTION_BUFFER_POINTER 0x0DF3
#define GL_CLIENT_ATTRIB_STACK_DEPTH 0x0BB1
#define GL_INDEX_LOGIC_OP 0x0BF1
#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 0x0D3B
#define GL_FEEDBACK_BUFFER_SIZE 0x0DF1
#define GL_FEEDBACK_BUFFER_TYPE 0x0DF2
#define GL_SELECTION_BUFFER_SIZE 0x0DF4
#define GL_VERTEX_ARRAY 0x8074
#define GL_NORMAL_ARRAY 0x8075
#define GL_COLOR_ARRAY 0x8076
#define GL_INDEX_ARRAY 0x8077
#define GL_TEXTURE_COORD_ARRAY 0x8078
#define GL_EDGE_FLAG_ARRAY 0x8079
#define GL_VERTEX_ARRAY_SIZE 0x807A
#define GL_VERTEX_ARRAY_TYPE 0x807B
#define GL_VERTEX_ARRAY_STRIDE 0x807C
#define GL_NORMAL_ARRAY_TYPE 0x807E
#define GL_NORMAL_ARRAY_STRIDE 0x807F
#define GL_COLOR_ARRAY_SIZE 0x8081
#define GL_COLOR_ARRAY_TYPE 0x8082
#define GL_COLOR_ARRAY_STRIDE 0x8083
#define GL_INDEX_ARRAY_TYPE 0x8085
#define GL_INDEX_ARRAY_STRIDE 0x8086
#define GL_TEXTURE_COORD_ARRAY_SIZE 0x8088
#define GL_TEXTURE_COORD_ARRAY_TYPE 0x8089
#define GL_TEXTURE_COORD_ARRAY_STRIDE 0x808A
#define GL_EDGE_FLAG_ARRAY_STRIDE 0x808C
#define GL_TEXTURE_LUMINANCE_SIZE 0x8060
#define GL_TEXTURE_INTENSITY_SIZE 0x8061
#define GL_TEXTURE_PRIORITY 0x8066
#define GL_TEXTURE_RESIDENT 0x8067
#define GL_ALPHA4 0x803B
#define GL_ALPHA8 0x803C
#define GL_ALPHA12 0x803D
#define GL_ALPHA16 0x803E
#define GL_LUMINANCE4 0x803F
#define GL_LUMINANCE8 0x8040
#define GL_LUMINANCE12 0x8041
#define GL_LUMINANCE16 0x8042
#define GL_LUMINANCE4_ALPHA4 0x8043
#define GL_LUMINANCE6_ALPHA2 0x8044
#define GL_LUMINANCE8_ALPHA8 0x8045
#define GL_LUMINANCE12_ALPHA4 0x8046
#define GL_LUMINANCE12_ALPHA12 0x8047
#define GL_LUMINANCE16_ALPHA16 0x8048
#define GL_INTENSITY 0x8049
#define GL_INTENSITY4 0x804A
#define GL_INTENSITY8 0x804B
#define GL_INTENSITY12 0x804C
#define GL_INTENSITY16 0x804D
#define GL_V2F 0x2A20
#define GL_V3F 0x2A21
#define GL_C4UB_V2F 0x2A22
#define GL_C4UB_V3F 0x2A23
#define GL_C3F_V3F 0x2A24
#define GL_N3F_V3F 0x2A25
#define GL_C4F_N3F_V3F 0x2A26
#define GL_T2F_V3F 0x2A27
#define GL_T4F_V4F 0x2A28
#define GL_T2F_C4UB_V3F 0x2A29
#define GL_T2F_C3F_V3F 0x2A2A
#define GL_T2F_N3F_V3F 0x2A2B
#define GL_T2F_C4F_N3F_V3F 0x2A2C
#define GL_T4F_C4F_N3F_V4F 0x2A2D
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_TEXTURE_3D 0x806F
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_RESCALE_NORMAL 0x803A
#define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#define GL_SINGLE_COLOR 0x81F9
#define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_MULTISAMPLE 0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLES 0x80A9
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#define GL_MAX_TEXTURE_UNITS 0x84E2
#define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#define GL_MULTISAMPLE_BIT 0x20000000
#define GL_NORMAL_MAP 0x8511
#define GL_REFLECTION_MAP 0x8512
#define GL_COMPRESSED_ALPHA 0x84E9
#define GL_COMPRESSED_LUMINANCE 0x84EA
#define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#define GL_COMPRESSED_INTENSITY 0x84EC
#define GL_COMBINE 0x8570
#define GL_COMBINE_RGB 0x8571
#define GL_COMBINE_ALPHA 0x8572
#define GL_SOURCE0_RGB 0x8580
#define GL_SOURCE1_RGB 0x8581
#define GL_SOURCE2_RGB 0x8582
#define GL_SOURCE0_ALPHA 0x8588
#define GL_SOURCE1_ALPHA 0x8589
#define GL_SOURCE2_ALPHA 0x858A
#define GL_OPERAND0_RGB 0x8590
#define GL_OPERAND1_RGB 0x8591
#define GL_OPERAND2_RGB 0x8592
#define GL_OPERAND0_ALPHA 0x8598
#define GL_OPERAND1_ALPHA 0x8599
#define GL_OPERAND2_ALPHA 0x859A
#define GL_RGB_SCALE 0x8573
#define GL_ADD_SIGNED 0x8574
#define GL_INTERPOLATE 0x8575
#define GL_SUBTRACT 0x84E7
#define GL_CONSTANT 0x8576
#define GL_PRIMARY_COLOR 0x8577
#define GL_PREVIOUS 0x8578
#define GL_DOT3_RGB 0x86AE
#define GL_DOT3_RGBA 0x86AF
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_INCR_WRAP 0x8507
#define GL_DECR_WRAP 0x8508
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_POINT_SIZE_MIN 0x8126
#define GL_POINT_SIZE_MAX 0x8127
#define GL_POINT_DISTANCE_ATTENUATION 0x8129
#define GL_GENERATE_MIPMAP 0x8191
#define GL_GENERATE_MIPMAP_HINT 0x8192
#define GL_FOG_COORDINATE_SOURCE 0x8450
#define GL_FOG_COORDINATE 0x8451
#define GL_FRAGMENT_DEPTH 0x8452
#define GL_CURRENT_FOG_COORDINATE 0x8453
#define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#define GL_FOG_COORDINATE_ARRAY 0x8457
#define GL_COLOR_SUM 0x8458
#define GL_CURRENT_SECONDARY_COLOR 0x8459
#define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#define GL_SECONDARY_COLOR_ARRAY 0x845E
#define GL_TEXTURE_FILTER_CONTROL 0x8500
#define GL_DEPTH_TEXTURE_MODE 0x884B
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_USAGE 0x8765
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_CURRENT_QUERY 0x8865
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_ARRAY_BUFFER 0x8892
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_READ_ONLY 0x88B8
#define GL_WRITE_ONLY 0x88B9
#define GL_READ_WRITE 0x88BA
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_STREAM_COPY 0x88E2
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STATIC_COPY 0x88E6
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_DYNAMIC_COPY 0x88EA
#define GL_SAMPLES_PASSED 0x8914
#define GL_SRC1_ALPHA 0x8589
#define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
#define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
#define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
#define GL_INDEX_ARRAY_BUFFER_BINDING 0x8899
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
#define GL_WEIGHT_ARRAY_BUFFER_BINDING 0x889E
#define GL_FOG_COORD_SRC 0x8450
#define GL_FOG_COORD 0x8451
#define GL_CURRENT_FOG_COORD 0x8453
#define GL_FOG_COORD_ARRAY_TYPE 0x8454
#define GL_FOG_COORD_ARRAY_STRIDE 0x8455
#define GL_FOG_COORD_ARRAY_POINTER 0x8456
#define GL_FOG_COORD_ARRAY 0x8457
#define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
#define GL_SRC0_RGB 0x8580
#define GL_SRC1_RGB 0x8581
#define GL_SRC2_RGB 0x8582
#define GL_SRC0_ALPHA 0x8588
#define GL_SRC2_ALPHA 0x858A

#define glCullFace pl_glCullFace
typedef void (APIENTRYP PFNGLCULLFACEPROC)(GLenum mode);
GLAPI PFNGLCULLFACEPROC pl_glCullFace;

#define glFrontFace pl_glFrontFace
typedef void (APIENTRYP PFNGLFRONTFACEPROC)(GLenum mode);
GLAPI PFNGLFRONTFACEPROC pl_glFrontFace;

#define glHint pl_glHint
typedef void (APIENTRYP PFNGLHINTPROC)(GLenum target, GLenum mode);
GLAPI PFNGLHINTPROC pl_glHint;

#define glLineWidth pl_glLineWidth
typedef void (APIENTRYP PFNGLLINEWIDTHPROC)(GLfloat width);
GLAPI PFNGLLINEWIDTHPROC pl_glLineWidth;

#define glPointSize pl_glPointSize
typedef void (APIENTRYP PFNGLPOINTSIZEPROC)(GLfloat size);
GLAPI PFNGLPOINTSIZEPROC pl_glPointSize;

#define glPolygonMode pl_glPolygonMode
typedef void (APIENTRYP PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);
GLAPI PFNGLPOLYGONMODEPROC pl_glPolygonMode;

#define glScissor pl_glScissor
typedef void (APIENTRYP PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI PFNGLSCISSORPROC pl_glScissor;

#define glTexParameterf pl_glTexParameterf
typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);
GLAPI PFNGLTEXPARAMETERFPROC pl_glTexParameterf;

#define glTexParameterfv pl_glTexParameterfv
typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat* params);
GLAPI PFNGLTEXPARAMETERFVPROC pl_glTexParameterfv;

#define glTexParameteri pl_glTexParameteri
typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
GLAPI PFNGLTEXPARAMETERIPROC pl_glTexParameteri;

#define glTexParameteriv pl_glTexParameteriv
typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint* params);
GLAPI PFNGLTEXPARAMETERIVPROC pl_glTexParameteriv;

#define glTexImage1D pl_glTexImage1D
typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void* pixels);
GLAPI PFNGLTEXIMAGE1DPROC pl_glTexImage1D;

#define glTexImage2D pl_glTexImage2D
typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void* pixels);
GLAPI PFNGLTEXIMAGE2DPROC pl_glTexImage2D;

#define glDrawBuffer pl_glDrawBuffer
typedef void (APIENTRYP PFNGLDRAWBUFFERPROC)(GLenum buf);
GLAPI PFNGLDRAWBUFFERPROC pl_glDrawBuffer;

#define glClear pl_glClear
typedef void (APIENTRYP PFNGLCLEARPROC)(GLbitfield mask);
GLAPI PFNGLCLEARPROC pl_glClear;

#define glClearColor pl_glClearColor
typedef void (APIENTRYP PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLAPI PFNGLCLEARCOLORPROC pl_glClearColor;

#define glClearStencil pl_glClearStencil
typedef void (APIENTRYP PFNGLCLEARSTENCILPROC)(GLint s);
GLAPI PFNGLCLEARSTENCILPROC pl_glClearStencil;

#define glClearDepth pl_glClearDepth
typedef void (APIENTRYP PFNGLCLEARDEPTHPROC)(GLdouble depth);
GLAPI PFNGLCLEARDEPTHPROC pl_glClearDepth;

#define glStencilMask pl_glStencilMask
typedef void (APIENTRYP PFNGLSTENCILMASKPROC)(GLuint mask);
GLAPI PFNGLSTENCILMASKPROC pl_glStencilMask;

#define glColorMask pl_glColorMask
typedef void (APIENTRYP PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLAPI PFNGLCOLORMASKPROC pl_glColorMask;

#define glDepthMask pl_glDepthMask
typedef void (APIENTRYP PFNGLDEPTHMASKPROC)(GLboolean flag);
GLAPI PFNGLDEPTHMASKPROC pl_glDepthMask;

#define glDisable pl_glDisable
typedef void (APIENTRYP PFNGLDISABLEPROC)(GLenum cap);
GLAPI PFNGLDISABLEPROC pl_glDisable;

#define glEnable pl_glEnable
typedef void (APIENTRYP PFNGLENABLEPROC)(GLenum cap);
GLAPI PFNGLENABLEPROC pl_glEnable;

#define glFinish pl_glFinish
typedef void (APIENTRYP PFNGLFINISHPROC)();
GLAPI PFNGLFINISHPROC pl_glFinish;

#define glFlush pl_glFlush
typedef void (APIENTRYP PFNGLFLUSHPROC)();
GLAPI PFNGLFLUSHPROC pl_glFlush;

#define glBlendFunc pl_glBlendFunc
typedef void (APIENTRYP PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);
GLAPI PFNGLBLENDFUNCPROC pl_glBlendFunc;

#define glLogicOp pl_glLogicOp
typedef void (APIENTRYP PFNGLLOGICOPPROC)(GLenum opcode);
GLAPI PFNGLLOGICOPPROC pl_glLogicOp;

#define glStencilFunc pl_glStencilFunc
typedef void (APIENTRYP PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);
GLAPI PFNGLSTENCILFUNCPROC pl_glStencilFunc;

#define glStencilOp pl_glStencilOp
typedef void (APIENTRYP PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);
GLAPI PFNGLSTENCILOPPROC pl_glStencilOp;

#define glDepthFunc pl_glDepthFunc
typedef void (APIENTRYP PFNGLDEPTHFUNCPROC)(GLenum func);
GLAPI PFNGLDEPTHFUNCPROC pl_glDepthFunc;

#define glPixelStoref pl_glPixelStoref
typedef void (APIENTRYP PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);
GLAPI PFNGLPIXELSTOREFPROC pl_glPixelStoref;

#define glPixelStorei pl_glPixelStorei
typedef void (APIENTRYP PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);
GLAPI PFNGLPIXELSTOREIPROC pl_glPixelStorei;

#define glReadBuffer pl_glReadBuffer
typedef void (APIENTRYP PFNGLREADBUFFERPROC)(GLenum src);
GLAPI PFNGLREADBUFFERPROC pl_glReadBuffer;

#define glReadPixels pl_glReadPixels
typedef void (APIENTRYP PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void* pixels);
GLAPI PFNGLREADPIXELSPROC pl_glReadPixels;

#define glGetBooleanv pl_glGetBooleanv
typedef void (APIENTRYP PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean* data);
GLAPI PFNGLGETBOOLEANVPROC pl_glGetBooleanv;

#define glGetDoublev pl_glGetDoublev
typedef void (APIENTRYP PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble* data);
GLAPI PFNGLGETDOUBLEVPROC pl_glGetDoublev;

#define glGetError pl_glGetError
typedef GLenum (APIENTRYP PFNGLGETERRORPROC)();
GLAPI PFNGLGETERRORPROC pl_glGetError;

#define glGetFloatv pl_glGetFloatv
typedef void (APIENTRYP PFNGLGETFLOATVPROC)(GLenum pname, GLfloat* data);
GLAPI PFNGLGETFLOATVPROC pl_glGetFloatv;

#define glGetIntegerv pl_glGetIntegerv
typedef void (APIENTRYP PFNGLGETINTEGERVPROC)(GLenum pname, GLint* data);
GLAPI PFNGLGETINTEGERVPROC pl_glGetIntegerv;

#define glGetString pl_glGetString
typedef GLubyte (APIENTRYP PFNGLGETSTRINGPROC)(GLenum name);
GLAPI PFNGLGETSTRINGPROC pl_glGetString;

#define glGetTexImage pl_glGetTexImage
typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, void* pixels);
GLAPI PFNGLGETTEXIMAGEPROC pl_glGetTexImage;

#define glGetTexParameterfv pl_glGetTexParameterfv
typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat* params);
GLAPI PFNGLGETTEXPARAMETERFVPROC pl_glGetTexParameterfv;

#define glGetTexParameteriv pl_glGetTexParameteriv
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint* params);
GLAPI PFNGLGETTEXPARAMETERIVPROC pl_glGetTexParameteriv;

#define glGetTexLevelParameterfv pl_glGetTexLevelParameterfv
typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat* params);
GLAPI PFNGLGETTEXLEVELPARAMETERFVPROC pl_glGetTexLevelParameterfv;

#define glGetTexLevelParameteriv pl_glGetTexLevelParameteriv
typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint* params);
GLAPI PFNGLGETTEXLEVELPARAMETERIVPROC pl_glGetTexLevelParameteriv;

#define glIsEnabled pl_glIsEnabled
typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC)(GLenum cap);
GLAPI PFNGLISENABLEDPROC pl_glIsEnabled;

#define glDepthRange pl_glDepthRange
typedef void (APIENTRYP PFNGLDEPTHRANGEPROC)(GLdouble n, GLdouble f);
GLAPI PFNGLDEPTHRANGEPROC pl_glDepthRange;

#define glViewport pl_glViewport
typedef void (APIENTRYP PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI PFNGLVIEWPORTPROC pl_glViewport;

#define glNewList pl_glNewList
typedef void (APIENTRYP PFNGLNEWLISTPROC)(GLuint list, GLenum mode);
GLAPI PFNGLNEWLISTPROC pl_glNewList;

#define glEndList pl_glEndList
typedef void (APIENTRYP PFNGLENDLISTPROC)();
GLAPI PFNGLENDLISTPROC pl_glEndList;

#define glCallList pl_glCallList
typedef void (APIENTRYP PFNGLCALLLISTPROC)(GLuint list);
GLAPI PFNGLCALLLISTPROC pl_glCallList;

#define glCallLists pl_glCallLists
typedef void (APIENTRYP PFNGLCALLLISTSPROC)(GLsizei n, GLenum type, const void* lists);
GLAPI PFNGLCALLLISTSPROC pl_glCallLists;

#define glDeleteLists pl_glDeleteLists
typedef void (APIENTRYP PFNGLDELETELISTSPROC)(GLuint list, GLsizei range);
GLAPI PFNGLDELETELISTSPROC pl_glDeleteLists;

#define glGenLists pl_glGenLists
typedef GLuint (APIENTRYP PFNGLGENLISTSPROC)(GLsizei range);
GLAPI PFNGLGENLISTSPROC pl_glGenLists;

#define glListBase pl_glListBase
typedef void (APIENTRYP PFNGLLISTBASEPROC)(GLuint base);
GLAPI PFNGLLISTBASEPROC pl_glListBase;

#define glBegin pl_glBegin
typedef void (APIENTRYP PFNGLBEGINPROC)(GLenum mode);
GLAPI PFNGLBEGINPROC pl_glBegin;

#define glBitmap pl_glBitmap
typedef void (APIENTRYP PFNGLBITMAPPROC)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte* bitmap);
GLAPI PFNGLBITMAPPROC pl_glBitmap;

#define glColor3b pl_glColor3b
typedef void (APIENTRYP PFNGLCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);
GLAPI PFNGLCOLOR3BPROC pl_glColor3b;

#define glColor3bv pl_glColor3bv
typedef void (APIENTRYP PFNGLCOLOR3BVPROC)(const GLbyte* v);
GLAPI PFNGLCOLOR3BVPROC pl_glColor3bv;

#define glColor3d pl_glColor3d
typedef void (APIENTRYP PFNGLCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);
GLAPI PFNGLCOLOR3DPROC pl_glColor3d;

#define glColor3dv pl_glColor3dv
typedef void (APIENTRYP PFNGLCOLOR3DVPROC)(const GLdouble* v);
GLAPI PFNGLCOLOR3DVPROC pl_glColor3dv;

#define glColor3f pl_glColor3f
typedef void (APIENTRYP PFNGLCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);
GLAPI PFNGLCOLOR3FPROC pl_glColor3f;

#define glColor3fv pl_glColor3fv
typedef void (APIENTRYP PFNGLCOLOR3FVPROC)(const GLfloat* v);
GLAPI PFNGLCOLOR3FVPROC pl_glColor3fv;

#define glColor3i pl_glColor3i
typedef void (APIENTRYP PFNGLCOLOR3IPROC)(GLint red, GLint green, GLint blue);
GLAPI PFNGLCOLOR3IPROC pl_glColor3i;

#define glColor3iv pl_glColor3iv
typedef void (APIENTRYP PFNGLCOLOR3IVPROC)(const GLint* v);
GLAPI PFNGLCOLOR3IVPROC pl_glColor3iv;

#define glColor3s pl_glColor3s
typedef void (APIENTRYP PFNGLCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);
GLAPI PFNGLCOLOR3SPROC pl_glColor3s;

#define glColor3sv pl_glColor3sv
typedef void (APIENTRYP PFNGLCOLOR3SVPROC)(const GLshort* v);
GLAPI PFNGLCOLOR3SVPROC pl_glColor3sv;

#define glColor3ub pl_glColor3ub
typedef void (APIENTRYP PFNGLCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);
GLAPI PFNGLCOLOR3UBPROC pl_glColor3ub;

#define glColor3ubv pl_glColor3ubv
typedef void (APIENTRYP PFNGLCOLOR3UBVPROC)(const GLubyte* v);
GLAPI PFNGLCOLOR3UBVPROC pl_glColor3ubv;

#define glColor3ui pl_glColor3ui
typedef void (APIENTRYP PFNGLCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);
GLAPI PFNGLCOLOR3UIPROC pl_glColor3ui;

#define glColor3uiv pl_glColor3uiv
typedef void (APIENTRYP PFNGLCOLOR3UIVPROC)(const GLuint* v);
GLAPI PFNGLCOLOR3UIVPROC pl_glColor3uiv;

#define glColor3us pl_glColor3us
typedef void (APIENTRYP PFNGLCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);
GLAPI PFNGLCOLOR3USPROC pl_glColor3us;

#define glColor3usv pl_glColor3usv
typedef void (APIENTRYP PFNGLCOLOR3USVPROC)(const GLushort* v);
GLAPI PFNGLCOLOR3USVPROC pl_glColor3usv;

#define glColor4b pl_glColor4b
typedef void (APIENTRYP PFNGLCOLOR4BPROC)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
GLAPI PFNGLCOLOR4BPROC pl_glColor4b;

#define glColor4bv pl_glColor4bv
typedef void (APIENTRYP PFNGLCOLOR4BVPROC)(const GLbyte* v);
GLAPI PFNGLCOLOR4BVPROC pl_glColor4bv;

#define glColor4d pl_glColor4d
typedef void (APIENTRYP PFNGLCOLOR4DPROC)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
GLAPI PFNGLCOLOR4DPROC pl_glColor4d;

#define glColor4dv pl_glColor4dv
typedef void (APIENTRYP PFNGLCOLOR4DVPROC)(const GLdouble* v);
GLAPI PFNGLCOLOR4DVPROC pl_glColor4dv;

#define glColor4f pl_glColor4f
typedef void (APIENTRYP PFNGLCOLOR4FPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLAPI PFNGLCOLOR4FPROC pl_glColor4f;

#define glColor4fv pl_glColor4fv
typedef void (APIENTRYP PFNGLCOLOR4FVPROC)(const GLfloat* v);
GLAPI PFNGLCOLOR4FVPROC pl_glColor4fv;

#define glColor4i pl_glColor4i
typedef void (APIENTRYP PFNGLCOLOR4IPROC)(GLint red, GLint green, GLint blue, GLint alpha);
GLAPI PFNGLCOLOR4IPROC pl_glColor4i;

#define glColor4iv pl_glColor4iv
typedef void (APIENTRYP PFNGLCOLOR4IVPROC)(const GLint* v);
GLAPI PFNGLCOLOR4IVPROC pl_glColor4iv;

#define glColor4s pl_glColor4s
typedef void (APIENTRYP PFNGLCOLOR4SPROC)(GLshort red, GLshort green, GLshort blue, GLshort alpha);
GLAPI PFNGLCOLOR4SPROC pl_glColor4s;

#define glColor4sv pl_glColor4sv
typedef void (APIENTRYP PFNGLCOLOR4SVPROC)(const GLshort* v);
GLAPI PFNGLCOLOR4SVPROC pl_glColor4sv;

#define glColor4ub pl_glColor4ub
typedef void (APIENTRYP PFNGLCOLOR4UBPROC)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
GLAPI PFNGLCOLOR4UBPROC pl_glColor4ub;

#define glColor4ubv pl_glColor4ubv
typedef void (APIENTRYP PFNGLCOLOR4UBVPROC)(const GLubyte* v);
GLAPI PFNGLCOLOR4UBVPROC pl_glColor4ubv;

#define glColor4ui pl_glColor4ui
typedef void (APIENTRYP PFNGLCOLOR4UIPROC)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLAPI PFNGLCOLOR4UIPROC pl_glColor4ui;

#define glColor4uiv pl_glColor4uiv
typedef void (APIENTRYP PFNGLCOLOR4UIVPROC)(const GLuint* v);
GLAPI PFNGLCOLOR4UIVPROC pl_glColor4uiv;

#define glColor4us pl_glColor4us
typedef void (APIENTRYP PFNGLCOLOR4USPROC)(GLushort red, GLushort green, GLushort blue, GLushort alpha);
GLAPI PFNGLCOLOR4USPROC pl_glColor4us;

#define glColor4usv pl_glColor4usv
typedef void (APIENTRYP PFNGLCOLOR4USVPROC)(const GLushort* v);
GLAPI PFNGLCOLOR4USVPROC pl_glColor4usv;

#define glEdgeFlag pl_glEdgeFlag
typedef void (APIENTRYP PFNGLEDGEFLAGPROC)(GLboolean flag);
GLAPI PFNGLEDGEFLAGPROC pl_glEdgeFlag;

#define glEdgeFlagv pl_glEdgeFlagv
typedef void (APIENTRYP PFNGLEDGEFLAGVPROC)(const GLboolean* flag);
GLAPI PFNGLEDGEFLAGVPROC pl_glEdgeFlagv;

#define glEnd pl_glEnd
typedef void (APIENTRYP PFNGLENDPROC)();
GLAPI PFNGLENDPROC pl_glEnd;

#define glIndexd pl_glIndexd
typedef void (APIENTRYP PFNGLINDEXDPROC)(GLdouble c);
GLAPI PFNGLINDEXDPROC pl_glIndexd;

#define glIndexdv pl_glIndexdv
typedef void (APIENTRYP PFNGLINDEXDVPROC)(const GLdouble* c);
GLAPI PFNGLINDEXDVPROC pl_glIndexdv;

#define glIndexf pl_glIndexf
typedef void (APIENTRYP PFNGLINDEXFPROC)(GLfloat c);
GLAPI PFNGLINDEXFPROC pl_glIndexf;

#define glIndexfv pl_glIndexfv
typedef void (APIENTRYP PFNGLINDEXFVPROC)(const GLfloat* c);
GLAPI PFNGLINDEXFVPROC pl_glIndexfv;

#define glIndexi pl_glIndexi
typedef void (APIENTRYP PFNGLINDEXIPROC)(GLint c);
GLAPI PFNGLINDEXIPROC pl_glIndexi;

#define glIndexiv pl_glIndexiv
typedef void (APIENTRYP PFNGLINDEXIVPROC)(const GLint* c);
GLAPI PFNGLINDEXIVPROC pl_glIndexiv;

#define glIndexs pl_glIndexs
typedef void (APIENTRYP PFNGLINDEXSPROC)(GLshort c);
GLAPI PFNGLINDEXSPROC pl_glIndexs;

#define glIndexsv pl_glIndexsv
typedef void (APIENTRYP PFNGLINDEXSVPROC)(const GLshort* c);
GLAPI PFNGLINDEXSVPROC pl_glIndexsv;

#define glNormal3b pl_glNormal3b
typedef void (APIENTRYP PFNGLNORMAL3BPROC)(GLbyte nx, GLbyte ny, GLbyte nz);
GLAPI PFNGLNORMAL3BPROC pl_glNormal3b;

#define glNormal3bv pl_glNormal3bv
typedef void (APIENTRYP PFNGLNORMAL3BVPROC)(const GLbyte* v);
GLAPI PFNGLNORMAL3BVPROC pl_glNormal3bv;

#define glNormal3d pl_glNormal3d
typedef void (APIENTRYP PFNGLNORMAL3DPROC)(GLdouble nx, GLdouble ny, GLdouble nz);
GLAPI PFNGLNORMAL3DPROC pl_glNormal3d;

#define glNormal3dv pl_glNormal3dv
typedef void (APIENTRYP PFNGLNORMAL3DVPROC)(const GLdouble* v);
GLAPI PFNGLNORMAL3DVPROC pl_glNormal3dv;

#define glNormal3f pl_glNormal3f
typedef void (APIENTRYP PFNGLNORMAL3FPROC)(GLfloat nx, GLfloat ny, GLfloat nz);
GLAPI PFNGLNORMAL3FPROC pl_glNormal3f;

#define glNormal3fv pl_glNormal3fv
typedef void (APIENTRYP PFNGLNORMAL3FVPROC)(const GLfloat* v);
GLAPI PFNGLNORMAL3FVPROC pl_glNormal3fv;

#define glNormal3i pl_glNormal3i
typedef void (APIENTRYP PFNGLNORMAL3IPROC)(GLint nx, GLint ny, GLint nz);
GLAPI PFNGLNORMAL3IPROC pl_glNormal3i;

#define glNormal3iv pl_glNormal3iv
typedef void (APIENTRYP PFNGLNORMAL3IVPROC)(const GLint* v);
GLAPI PFNGLNORMAL3IVPROC pl_glNormal3iv;

#define glNormal3s pl_glNormal3s
typedef void (APIENTRYP PFNGLNORMAL3SPROC)(GLshort nx, GLshort ny, GLshort nz);
GLAPI PFNGLNORMAL3SPROC pl_glNormal3s;

#define glNormal3sv pl_glNormal3sv
typedef void (APIENTRYP PFNGLNORMAL3SVPROC)(const GLshort* v);
GLAPI PFNGLNORMAL3SVPROC pl_glNormal3sv;

#define glRasterPos2d pl_glRasterPos2d
typedef void (APIENTRYP PFNGLRASTERPOS2DPROC)(GLdouble x, GLdouble y);
GLAPI PFNGLRASTERPOS2DPROC pl_glRasterPos2d;

#define glRasterPos2dv pl_glRasterPos2dv
typedef void (APIENTRYP PFNGLRASTERPOS2DVPROC)(const GLdouble* v);
GLAPI PFNGLRASTERPOS2DVPROC pl_glRasterPos2dv;

#define glRasterPos2f pl_glRasterPos2f
typedef void (APIENTRYP PFNGLRASTERPOS2FPROC)(GLfloat x, GLfloat y);
GLAPI PFNGLRASTERPOS2FPROC pl_glRasterPos2f;

#define glRasterPos2fv pl_glRasterPos2fv
typedef void (APIENTRYP PFNGLRASTERPOS2FVPROC)(const GLfloat* v);
GLAPI PFNGLRASTERPOS2FVPROC pl_glRasterPos2fv;

#define glRasterPos2i pl_glRasterPos2i
typedef void (APIENTRYP PFNGLRASTERPOS2IPROC)(GLint x, GLint y);
GLAPI PFNGLRASTERPOS2IPROC pl_glRasterPos2i;

#define glRasterPos2iv pl_glRasterPos2iv
typedef void (APIENTRYP PFNGLRASTERPOS2IVPROC)(const GLint* v);
GLAPI PFNGLRASTERPOS2IVPROC pl_glRasterPos2iv;

#define glRasterPos2s pl_glRasterPos2s
typedef void (APIENTRYP PFNGLRASTERPOS2SPROC)(GLshort x, GLshort y);
GLAPI PFNGLRASTERPOS2SPROC pl_glRasterPos2s;

#define glRasterPos2sv pl_glRasterPos2sv
typedef void (APIENTRYP PFNGLRASTERPOS2SVPROC)(const GLshort* v);
GLAPI PFNGLRASTERPOS2SVPROC pl_glRasterPos2sv;

#define glRasterPos3d pl_glRasterPos3d
typedef void (APIENTRYP PFNGLRASTERPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);
GLAPI PFNGLRASTERPOS3DPROC pl_glRasterPos3d;

#define glRasterPos3dv pl_glRasterPos3dv
typedef void (APIENTRYP PFNGLRASTERPOS3DVPROC)(const GLdouble* v);
GLAPI PFNGLRASTERPOS3DVPROC pl_glRasterPos3dv;

#define glRasterPos3f pl_glRasterPos3f
typedef void (APIENTRYP PFNGLRASTERPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);
GLAPI PFNGLRASTERPOS3FPROC pl_glRasterPos3f;

#define glRasterPos3fv pl_glRasterPos3fv
typedef void (APIENTRYP PFNGLRASTERPOS3FVPROC)(const GLfloat* v);
GLAPI PFNGLRASTERPOS3FVPROC pl_glRasterPos3fv;

#define glRasterPos3i pl_glRasterPos3i
typedef void (APIENTRYP PFNGLRASTERPOS3IPROC)(GLint x, GLint y, GLint z);
GLAPI PFNGLRASTERPOS3IPROC pl_glRasterPos3i;

#define glRasterPos3iv pl_glRasterPos3iv
typedef void (APIENTRYP PFNGLRASTERPOS3IVPROC)(const GLint* v);
GLAPI PFNGLRASTERPOS3IVPROC pl_glRasterPos3iv;

#define glRasterPos3s pl_glRasterPos3s
typedef void (APIENTRYP PFNGLRASTERPOS3SPROC)(GLshort x, GLshort y, GLshort z);
GLAPI PFNGLRASTERPOS3SPROC pl_glRasterPos3s;

#define glRasterPos3sv pl_glRasterPos3sv
typedef void (APIENTRYP PFNGLRASTERPOS3SVPROC)(const GLshort* v);
GLAPI PFNGLRASTERPOS3SVPROC pl_glRasterPos3sv;

#define glRasterPos4d pl_glRasterPos4d
typedef void (APIENTRYP PFNGLRASTERPOS4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLAPI PFNGLRASTERPOS4DPROC pl_glRasterPos4d;

#define glRasterPos4dv pl_glRasterPos4dv
typedef void (APIENTRYP PFNGLRASTERPOS4DVPROC)(const GLdouble* v);
GLAPI PFNGLRASTERPOS4DVPROC pl_glRasterPos4dv;

#define glRasterPos4f pl_glRasterPos4f
typedef void (APIENTRYP PFNGLRASTERPOS4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLAPI PFNGLRASTERPOS4FPROC pl_glRasterPos4f;

#define glRasterPos4fv pl_glRasterPos4fv
typedef void (APIENTRYP PFNGLRASTERPOS4FVPROC)(const GLfloat* v);
GLAPI PFNGLRASTERPOS4FVPROC pl_glRasterPos4fv;

#define glRasterPos4i pl_glRasterPos4i
typedef void (APIENTRYP PFNGLRASTERPOS4IPROC)(GLint x, GLint y, GLint z, GLint w);
GLAPI PFNGLRASTERPOS4IPROC pl_glRasterPos4i;

#define glRasterPos4iv pl_glRasterPos4iv
typedef void (APIENTRYP PFNGLRASTERPOS4IVPROC)(const GLint* v);
GLAPI PFNGLRASTERPOS4IVPROC pl_glRasterPos4iv;

#define glRasterPos4s pl_glRasterPos4s
typedef void (APIENTRYP PFNGLRASTERPOS4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
GLAPI PFNGLRASTERPOS4SPROC pl_glRasterPos4s;

#define glRasterPos4sv pl_glRasterPos4sv
typedef void (APIENTRYP PFNGLRASTERPOS4SVPROC)(const GLshort* v);
GLAPI PFNGLRASTERPOS4SVPROC pl_glRasterPos4sv;

#define glRectd pl_glRectd
typedef void (APIENTRYP PFNGLRECTDPROC)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
GLAPI PFNGLRECTDPROC pl_glRectd;

#define glRectdv pl_glRectdv
typedef void (APIENTRYP PFNGLRECTDVPROC)(const GLdouble* v1, const GLdouble* v2);
GLAPI PFNGLRECTDVPROC pl_glRectdv;

#define glRectf pl_glRectf
typedef void (APIENTRYP PFNGLRECTFPROC)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
GLAPI PFNGLRECTFPROC pl_glRectf;

#define glRectfv pl_glRectfv
typedef void (APIENTRYP PFNGLRECTFVPROC)(const GLfloat* v1, const GLfloat* v2);
GLAPI PFNGLRECTFVPROC pl_glRectfv;

#define glRecti pl_glRecti
typedef void (APIENTRYP PFNGLRECTIPROC)(GLint x1, GLint y1, GLint x2, GLint y2);
GLAPI PFNGLRECTIPROC pl_glRecti;

#define glRectiv pl_glRectiv
typedef void (APIENTRYP PFNGLRECTIVPROC)(const GLint* v1, const GLint* v2);
GLAPI PFNGLRECTIVPROC pl_glRectiv;

#define glRects pl_glRects
typedef void (APIENTRYP PFNGLRECTSPROC)(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
GLAPI PFNGLRECTSPROC pl_glRects;

#define glRectsv pl_glRectsv
typedef void (APIENTRYP PFNGLRECTSVPROC)(const GLshort* v1, const GLshort* v2);
GLAPI PFNGLRECTSVPROC pl_glRectsv;

#define glTexCoord1d pl_glTexCoord1d
typedef void (APIENTRYP PFNGLTEXCOORD1DPROC)(GLdouble s);
GLAPI PFNGLTEXCOORD1DPROC pl_glTexCoord1d;

#define glTexCoord1dv pl_glTexCoord1dv
typedef void (APIENTRYP PFNGLTEXCOORD1DVPROC)(const GLdouble* v);
GLAPI PFNGLTEXCOORD1DVPROC pl_glTexCoord1dv;

#define glTexCoord1f pl_glTexCoord1f
typedef void (APIENTRYP PFNGLTEXCOORD1FPROC)(GLfloat s);
GLAPI PFNGLTEXCOORD1FPROC pl_glTexCoord1f;

#define glTexCoord1fv pl_glTexCoord1fv
typedef void (APIENTRYP PFNGLTEXCOORD1FVPROC)(const GLfloat* v);
GLAPI PFNGLTEXCOORD1FVPROC pl_glTexCoord1fv;

#define glTexCoord1i pl_glTexCoord1i
typedef void (APIENTRYP PFNGLTEXCOORD1IPROC)(GLint s);
GLAPI PFNGLTEXCOORD1IPROC pl_glTexCoord1i;

#define glTexCoord1iv pl_glTexCoord1iv
typedef void (APIENTRYP PFNGLTEXCOORD1IVPROC)(const GLint* v);
GLAPI PFNGLTEXCOORD1IVPROC pl_glTexCoord1iv;

#define glTexCoord1s pl_glTexCoord1s
typedef void (APIENTRYP PFNGLTEXCOORD1SPROC)(GLshort s);
GLAPI PFNGLTEXCOORD1SPROC pl_glTexCoord1s;

#define glTexCoord1sv pl_glTexCoord1sv
typedef void (APIENTRYP PFNGLTEXCOORD1SVPROC)(const GLshort* v);
GLAPI PFNGLTEXCOORD1SVPROC pl_glTexCoord1sv;

#define glTexCoord2d pl_glTexCoord2d
typedef void (APIENTRYP PFNGLTEXCOORD2DPROC)(GLdouble s, GLdouble t);
GLAPI PFNGLTEXCOORD2DPROC pl_glTexCoord2d;

#define glTexCoord2dv pl_glTexCoord2dv
typedef void (APIENTRYP PFNGLTEXCOORD2DVPROC)(const GLdouble* v);
GLAPI PFNGLTEXCOORD2DVPROC pl_glTexCoord2dv;

#define glTexCoord2f pl_glTexCoord2f
typedef void (APIENTRYP PFNGLTEXCOORD2FPROC)(GLfloat s, GLfloat t);
GLAPI PFNGLTEXCOORD2FPROC pl_glTexCoord2f;

#define glTexCoord2fv pl_glTexCoord2fv
typedef void (APIENTRYP PFNGLTEXCOORD2FVPROC)(const GLfloat* v);
GLAPI PFNGLTEXCOORD2FVPROC pl_glTexCoord2fv;

#define glTexCoord2i pl_glTexCoord2i
typedef void (APIENTRYP PFNGLTEXCOORD2IPROC)(GLint s, GLint t);
GLAPI PFNGLTEXCOORD2IPROC pl_glTexCoord2i;

#define glTexCoord2iv pl_glTexCoord2iv
typedef void (APIENTRYP PFNGLTEXCOORD2IVPROC)(const GLint* v);
GLAPI PFNGLTEXCOORD2IVPROC pl_glTexCoord2iv;

#define glTexCoord2s pl_glTexCoord2s
typedef void (APIENTRYP PFNGLTEXCOORD2SPROC)(GLshort s, GLshort t);
GLAPI PFNGLTEXCOORD2SPROC pl_glTexCoord2s;

#define glTexCoord2sv pl_glTexCoord2sv
typedef void (APIENTRYP PFNGLTEXCOORD2SVPROC)(const GLshort* v);
GLAPI PFNGLTEXCOORD2SVPROC pl_glTexCoord2sv;

#define glTexCoord3d pl_glTexCoord3d
typedef void (APIENTRYP PFNGLTEXCOORD3DPROC)(GLdouble s, GLdouble t, GLdouble r);
GLAPI PFNGLTEXCOORD3DPROC pl_glTexCoord3d;

#define glTexCoord3dv pl_glTexCoord3dv
typedef void (APIENTRYP PFNGLTEXCOORD3DVPROC)(const GLdouble* v);
GLAPI PFNGLTEXCOORD3DVPROC pl_glTexCoord3dv;

#define glTexCoord3f pl_glTexCoord3f
typedef void (APIENTRYP PFNGLTEXCOORD3FPROC)(GLfloat s, GLfloat t, GLfloat r);
GLAPI PFNGLTEXCOORD3FPROC pl_glTexCoord3f;

#define glTexCoord3fv pl_glTexCoord3fv
typedef void (APIENTRYP PFNGLTEXCOORD3FVPROC)(const GLfloat* v);
GLAPI PFNGLTEXCOORD3FVPROC pl_glTexCoord3fv;

#define glTexCoord3i pl_glTexCoord3i
typedef void (APIENTRYP PFNGLTEXCOORD3IPROC)(GLint s, GLint t, GLint r);
GLAPI PFNGLTEXCOORD3IPROC pl_glTexCoord3i;

#define glTexCoord3iv pl_glTexCoord3iv
typedef void (APIENTRYP PFNGLTEXCOORD3IVPROC)(const GLint* v);
GLAPI PFNGLTEXCOORD3IVPROC pl_glTexCoord3iv;

#define glTexCoord3s pl_glTexCoord3s
typedef void (APIENTRYP PFNGLTEXCOORD3SPROC)(GLshort s, GLshort t, GLshort r);
GLAPI PFNGLTEXCOORD3SPROC pl_glTexCoord3s;

#define glTexCoord3sv pl_glTexCoord3sv
typedef void (APIENTRYP PFNGLTEXCOORD3SVPROC)(const GLshort* v);
GLAPI PFNGLTEXCOORD3SVPROC pl_glTexCoord3sv;

#define glTexCoord4d pl_glTexCoord4d
typedef void (APIENTRYP PFNGLTEXCOORD4DPROC)(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLAPI PFNGLTEXCOORD4DPROC pl_glTexCoord4d;

#define glTexCoord4dv pl_glTexCoord4dv
typedef void (APIENTRYP PFNGLTEXCOORD4DVPROC)(const GLdouble* v);
GLAPI PFNGLTEXCOORD4DVPROC pl_glTexCoord4dv;

#define glTexCoord4f pl_glTexCoord4f
typedef void (APIENTRYP PFNGLTEXCOORD4FPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLAPI PFNGLTEXCOORD4FPROC pl_glTexCoord4f;

#define glTexCoord4fv pl_glTexCoord4fv
typedef void (APIENTRYP PFNGLTEXCOORD4FVPROC)(const GLfloat* v);
GLAPI PFNGLTEXCOORD4FVPROC pl_glTexCoord4fv;

#define glTexCoord4i pl_glTexCoord4i
typedef void (APIENTRYP PFNGLTEXCOORD4IPROC)(GLint s, GLint t, GLint r, GLint q);
GLAPI PFNGLTEXCOORD4IPROC pl_glTexCoord4i;

#define glTexCoord4iv pl_glTexCoord4iv
typedef void (APIENTRYP PFNGLTEXCOORD4IVPROC)(const GLint* v);
GLAPI PFNGLTEXCOORD4IVPROC pl_glTexCoord4iv;

#define glTexCoord4s pl_glTexCoord4s
typedef void (APIENTRYP PFNGLTEXCOORD4SPROC)(GLshort s, GLshort t, GLshort r, GLshort q);
GLAPI PFNGLTEXCOORD4SPROC pl_glTexCoord4s;

#define glTexCoord4sv pl_glTexCoord4sv
typedef void (APIENTRYP PFNGLTEXCOORD4SVPROC)(const GLshort* v);
GLAPI PFNGLTEXCOORD4SVPROC pl_glTexCoord4sv;

#define glVertex2d pl_glVertex2d
typedef void (APIENTRYP PFNGLVERTEX2DPROC)(GLdouble x, GLdouble y);
GLAPI PFNGLVERTEX2DPROC pl_glVertex2d;

#define glVertex2dv pl_glVertex2dv
typedef void (APIENTRYP PFNGLVERTEX2DVPROC)(const GLdouble* v);
GLAPI PFNGLVERTEX2DVPROC pl_glVertex2dv;

#define glVertex2f pl_glVertex2f
typedef void (APIENTRYP PFNGLVERTEX2FPROC)(GLfloat x, GLfloat y);
GLAPI PFNGLVERTEX2FPROC pl_glVertex2f;

#define glVertex2fv pl_glVertex2fv
typedef void (APIENTRYP PFNGLVERTEX2FVPROC)(const GLfloat* v);
GLAPI PFNGLVERTEX2FVPROC pl_glVertex2fv;

#define glVertex2i pl_glVertex2i
typedef void (APIENTRYP PFNGLVERTEX2IPROC)(GLint x, GLint y);
GLAPI PFNGLVERTEX2IPROC pl_glVertex2i;

#define glVertex2iv pl_glVertex2iv
typedef void (APIENTRYP PFNGLVERTEX2IVPROC)(const GLint* v);
GLAPI PFNGLVERTEX2IVPROC pl_glVertex2iv;

#define glVertex2s pl_glVertex2s
typedef void (APIENTRYP PFNGLVERTEX2SPROC)(GLshort x, GLshort y);
GLAPI PFNGLVERTEX2SPROC pl_glVertex2s;

#define glVertex2sv pl_glVertex2sv
typedef void (APIENTRYP PFNGLVERTEX2SVPROC)(const GLshort* v);
GLAPI PFNGLVERTEX2SVPROC pl_glVertex2sv;

#define glVertex3d pl_glVertex3d
typedef void (APIENTRYP PFNGLVERTEX3DPROC)(GLdouble x, GLdouble y, GLdouble z);
GLAPI PFNGLVERTEX3DPROC pl_glVertex3d;

#define glVertex3dv pl_glVertex3dv
typedef void (APIENTRYP PFNGLVERTEX3DVPROC)(const GLdouble* v);
GLAPI PFNGLVERTEX3DVPROC pl_glVertex3dv;

#define glVertex3f pl_glVertex3f
typedef void (APIENTRYP PFNGLVERTEX3FPROC)(GLfloat x, GLfloat y, GLfloat z);
GLAPI PFNGLVERTEX3FPROC pl_glVertex3f;

#define glVertex3fv pl_glVertex3fv
typedef void (APIENTRYP PFNGLVERTEX3FVPROC)(const GLfloat* v);
GLAPI PFNGLVERTEX3FVPROC pl_glVertex3fv;

#define glVertex3i pl_glVertex3i
typedef void (APIENTRYP PFNGLVERTEX3IPROC)(GLint x, GLint y, GLint z);
GLAPI PFNGLVERTEX3IPROC pl_glVertex3i;

#define glVertex3iv pl_glVertex3iv
typedef void (APIENTRYP PFNGLVERTEX3IVPROC)(const GLint* v);
GLAPI PFNGLVERTEX3IVPROC pl_glVertex3iv;

#define glVertex3s pl_glVertex3s
typedef void (APIENTRYP PFNGLVERTEX3SPROC)(GLshort x, GLshort y, GLshort z);
GLAPI PFNGLVERTEX3SPROC pl_glVertex3s;

#define glVertex3sv pl_glVertex3sv
typedef void (APIENTRYP PFNGLVERTEX3SVPROC)(const GLshort* v);
GLAPI PFNGLVERTEX3SVPROC pl_glVertex3sv;

#define glVertex4d pl_glVertex4d
typedef void (APIENTRYP PFNGLVERTEX4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLAPI PFNGLVERTEX4DPROC pl_glVertex4d;

#define glVertex4dv pl_glVertex4dv
typedef void (APIENTRYP PFNGLVERTEX4DVPROC)(const GLdouble* v);
GLAPI PFNGLVERTEX4DVPROC pl_glVertex4dv;

#define glVertex4f pl_glVertex4f
typedef void (APIENTRYP PFNGLVERTEX4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLAPI PFNGLVERTEX4FPROC pl_glVertex4f;

#define glVertex4fv pl_glVertex4fv
typedef void (APIENTRYP PFNGLVERTEX4FVPROC)(const GLfloat* v);
GLAPI PFNGLVERTEX4FVPROC pl_glVertex4fv;

#define glVertex4i pl_glVertex4i
typedef void (APIENTRYP PFNGLVERTEX4IPROC)(GLint x, GLint y, GLint z, GLint w);
GLAPI PFNGLVERTEX4IPROC pl_glVertex4i;

#define glVertex4iv pl_glVertex4iv
typedef void (APIENTRYP PFNGLVERTEX4IVPROC)(const GLint* v);
GLAPI PFNGLVERTEX4IVPROC pl_glVertex4iv;

#define glVertex4s pl_glVertex4s
typedef void (APIENTRYP PFNGLVERTEX4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
GLAPI PFNGLVERTEX4SPROC pl_glVertex4s;

#define glVertex4sv pl_glVertex4sv
typedef void (APIENTRYP PFNGLVERTEX4SVPROC)(const GLshort* v);
GLAPI PFNGLVERTEX4SVPROC pl_glVertex4sv;

#define glClipPlane pl_glClipPlane
typedef void (APIENTRYP PFNGLCLIPPLANEPROC)(GLenum plane, const GLdouble* equation);
GLAPI PFNGLCLIPPLANEPROC pl_glClipPlane;

#define glColorMaterial pl_glColorMaterial
typedef void (APIENTRYP PFNGLCOLORMATERIALPROC)(GLenum face, GLenum mode);
GLAPI PFNGLCOLORMATERIALPROC pl_glColorMaterial;

#define glFogf pl_glFogf
typedef void (APIENTRYP PFNGLFOGFPROC)(GLenum pname, GLfloat param);
GLAPI PFNGLFOGFPROC pl_glFogf;

#define glFogfv pl_glFogfv
typedef void (APIENTRYP PFNGLFOGFVPROC)(GLenum pname, const GLfloat* params);
GLAPI PFNGLFOGFVPROC pl_glFogfv;

#define glFogi pl_glFogi
typedef void (APIENTRYP PFNGLFOGIPROC)(GLenum pname, GLint param);
GLAPI PFNGLFOGIPROC pl_glFogi;

#define glFogiv pl_glFogiv
typedef void (APIENTRYP PFNGLFOGIVPROC)(GLenum pname, const GLint* params);
GLAPI PFNGLFOGIVPROC pl_glFogiv;

#define glLightf pl_glLightf
typedef void (APIENTRYP PFNGLLIGHTFPROC)(GLenum light, GLenum pname, GLfloat param);
GLAPI PFNGLLIGHTFPROC pl_glLightf;

#define glLightfv pl_glLightfv
typedef void (APIENTRYP PFNGLLIGHTFVPROC)(GLenum light, GLenum pname, const GLfloat* params);
GLAPI PFNGLLIGHTFVPROC pl_glLightfv;

#define glLighti pl_glLighti
typedef void (APIENTRYP PFNGLLIGHTIPROC)(GLenum light, GLenum pname, GLint param);
GLAPI PFNGLLIGHTIPROC pl_glLighti;

#define glLightiv pl_glLightiv
typedef void (APIENTRYP PFNGLLIGHTIVPROC)(GLenum light, GLenum pname, const GLint* params);
GLAPI PFNGLLIGHTIVPROC pl_glLightiv;

#define glLightModelf pl_glLightModelf
typedef void (APIENTRYP PFNGLLIGHTMODELFPROC)(GLenum pname, GLfloat param);
GLAPI PFNGLLIGHTMODELFPROC pl_glLightModelf;

#define glLightModelfv pl_glLightModelfv
typedef void (APIENTRYP PFNGLLIGHTMODELFVPROC)(GLenum pname, const GLfloat* params);
GLAPI PFNGLLIGHTMODELFVPROC pl_glLightModelfv;

#define glLightModeli pl_glLightModeli
typedef void (APIENTRYP PFNGLLIGHTMODELIPROC)(GLenum pname, GLint param);
GLAPI PFNGLLIGHTMODELIPROC pl_glLightModeli;

#define glLightModeliv pl_glLightModeliv
typedef void (APIENTRYP PFNGLLIGHTMODELIVPROC)(GLenum pname, const GLint* params);
GLAPI PFNGLLIGHTMODELIVPROC pl_glLightModeliv;

#define glLineStipple pl_glLineStipple
typedef void (APIENTRYP PFNGLLINESTIPPLEPROC)(GLint factor, GLushort pattern);
GLAPI PFNGLLINESTIPPLEPROC pl_glLineStipple;

#define glMaterialf pl_glMaterialf
typedef void (APIENTRYP PFNGLMATERIALFPROC)(GLenum face, GLenum pname, GLfloat param);
GLAPI PFNGLMATERIALFPROC pl_glMaterialf;

#define glMaterialfv pl_glMaterialfv
typedef void (APIENTRYP PFNGLMATERIALFVPROC)(GLenum face, GLenum pname, const GLfloat* params);
GLAPI PFNGLMATERIALFVPROC pl_glMaterialfv;

#define glMateriali pl_glMateriali
typedef void (APIENTRYP PFNGLMATERIALIPROC)(GLenum face, GLenum pname, GLint param);
GLAPI PFNGLMATERIALIPROC pl_glMateriali;

#define glMaterialiv pl_glMaterialiv
typedef void (APIENTRYP PFNGLMATERIALIVPROC)(GLenum face, GLenum pname, const GLint* params);
GLAPI PFNGLMATERIALIVPROC pl_glMaterialiv;

#define glPolygonStipple pl_glPolygonStipple
typedef void (APIENTRYP PFNGLPOLYGONSTIPPLEPROC)(const GLubyte* mask);
GLAPI PFNGLPOLYGONSTIPPLEPROC pl_glPolygonStipple;

#define glShadeModel pl_glShadeModel
typedef void (APIENTRYP PFNGLSHADEMODELPROC)(GLenum mode);
GLAPI PFNGLSHADEMODELPROC pl_glShadeModel;

#define glTexEnvf pl_glTexEnvf
typedef void (APIENTRYP PFNGLTEXENVFPROC)(GLenum target, GLenum pname, GLfloat param);
GLAPI PFNGLTEXENVFPROC pl_glTexEnvf;

#define glTexEnvfv pl_glTexEnvfv
typedef void (APIENTRYP PFNGLTEXENVFVPROC)(GLenum target, GLenum pname, const GLfloat* params);
GLAPI PFNGLTEXENVFVPROC pl_glTexEnvfv;

#define glTexEnvi pl_glTexEnvi
typedef void (APIENTRYP PFNGLTEXENVIPROC)(GLenum target, GLenum pname, GLint param);
GLAPI PFNGLTEXENVIPROC pl_glTexEnvi;

#define glTexEnviv pl_glTexEnviv
typedef void (APIENTRYP PFNGLTEXENVIVPROC)(GLenum target, GLenum pname, const GLint* params);
GLAPI PFNGLTEXENVIVPROC pl_glTexEnviv;

#define glTexGend pl_glTexGend
typedef void (APIENTRYP PFNGLTEXGENDPROC)(GLenum coord, GLenum pname, GLdouble param);
GLAPI PFNGLTEXGENDPROC pl_glTexGend;

#define glTexGendv pl_glTexGendv
typedef void (APIENTRYP PFNGLTEXGENDVPROC)(GLenum coord, GLenum pname, const GLdouble* params);
GLAPI PFNGLTEXGENDVPROC pl_glTexGendv;

#define glTexGenf pl_glTexGenf
typedef void (APIENTRYP PFNGLTEXGENFPROC)(GLenum coord, GLenum pname, GLfloat param);
GLAPI PFNGLTEXGENFPROC pl_glTexGenf;

#define glTexGenfv pl_glTexGenfv
typedef void (APIENTRYP PFNGLTEXGENFVPROC)(GLenum coord, GLenum pname, const GLfloat* params);
GLAPI PFNGLTEXGENFVPROC pl_glTexGenfv;

#define glTexGeni pl_glTexGeni
typedef void (APIENTRYP PFNGLTEXGENIPROC)(GLenum coord, GLenum pname, GLint param);
GLAPI PFNGLTEXGENIPROC pl_glTexGeni;

#define glTexGeniv pl_glTexGeniv
typedef void (APIENTRYP PFNGLTEXGENIVPROC)(GLenum coord, GLenum pname, const GLint* params);
GLAPI PFNGLTEXGENIVPROC pl_glTexGeniv;

#define glFeedbackBuffer pl_glFeedbackBuffer
typedef void (APIENTRYP PFNGLFEEDBACKBUFFERPROC)(GLsizei size, GLenum type, GLfloat* buffer);
GLAPI PFNGLFEEDBACKBUFFERPROC pl_glFeedbackBuffer;

#define glSelectBuffer pl_glSelectBuffer
typedef void (APIENTRYP PFNGLSELECTBUFFERPROC)(GLsizei size, GLuint* buffer);
GLAPI PFNGLSELECTBUFFERPROC pl_glSelectBuffer;

#define glRenderMode pl_glRenderMode
typedef GLint (APIENTRYP PFNGLRENDERMODEPROC)(GLenum mode);
GLAPI PFNGLRENDERMODEPROC pl_glRenderMode;

#define glInitNames pl_glInitNames
typedef void (APIENTRYP PFNGLINITNAMESPROC)();
GLAPI PFNGLINITNAMESPROC pl_glInitNames;

#define glLoadName pl_glLoadName
typedef void (APIENTRYP PFNGLLOADNAMEPROC)(GLuint name);
GLAPI PFNGLLOADNAMEPROC pl_glLoadName;

#define glPassThrough pl_glPassThrough
typedef void (APIENTRYP PFNGLPASSTHROUGHPROC)(GLfloat token);
GLAPI PFNGLPASSTHROUGHPROC pl_glPassThrough;

#define glPopName pl_glPopName
typedef void (APIENTRYP PFNGLPOPNAMEPROC)();
GLAPI PFNGLPOPNAMEPROC pl_glPopName;

#define glPushName pl_glPushName
typedef void (APIENTRYP PFNGLPUSHNAMEPROC)(GLuint name);
GLAPI PFNGLPUSHNAMEPROC pl_glPushName;

#define glClearAccum pl_glClearAccum
typedef void (APIENTRYP PFNGLCLEARACCUMPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLAPI PFNGLCLEARACCUMPROC pl_glClearAccum;

#define glClearIndex pl_glClearIndex
typedef void (APIENTRYP PFNGLCLEARINDEXPROC)(GLfloat c);
GLAPI PFNGLCLEARINDEXPROC pl_glClearIndex;

#define glIndexMask pl_glIndexMask
typedef void (APIENTRYP PFNGLINDEXMASKPROC)(GLuint mask);
GLAPI PFNGLINDEXMASKPROC pl_glIndexMask;

#define glAccum pl_glAccum
typedef void (APIENTRYP PFNGLACCUMPROC)(GLenum op, GLfloat value);
GLAPI PFNGLACCUMPROC pl_glAccum;

#define glPopAttrib pl_glPopAttrib
typedef void (APIENTRYP PFNGLPOPATTRIBPROC)();
GLAPI PFNGLPOPATTRIBPROC pl_glPopAttrib;

#define glPushAttrib pl_glPushAttrib
typedef void (APIENTRYP PFNGLPUSHATTRIBPROC)(GLbitfield mask);
GLAPI PFNGLPUSHATTRIBPROC pl_glPushAttrib;

#define glMap1d pl_glMap1d
typedef void (APIENTRYP PFNGLMAP1DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble* points);
GLAPI PFNGLMAP1DPROC pl_glMap1d;

#define glMap1f pl_glMap1f
typedef void (APIENTRYP PFNGLMAP1FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat* points);
GLAPI PFNGLMAP1FPROC pl_glMap1f;

#define glMap2d pl_glMap2d
typedef void (APIENTRYP PFNGLMAP2DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble* points);
GLAPI PFNGLMAP2DPROC pl_glMap2d;

#define glMap2f pl_glMap2f
typedef void (APIENTRYP PFNGLMAP2FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat* points);
GLAPI PFNGLMAP2FPROC pl_glMap2f;

#define glMapGrid1d pl_glMapGrid1d
typedef void (APIENTRYP PFNGLMAPGRID1DPROC)(GLint un, GLdouble u1, GLdouble u2);
GLAPI PFNGLMAPGRID1DPROC pl_glMapGrid1d;

#define glMapGrid1f pl_glMapGrid1f
typedef void (APIENTRYP PFNGLMAPGRID1FPROC)(GLint un, GLfloat u1, GLfloat u2);
GLAPI PFNGLMAPGRID1FPROC pl_glMapGrid1f;

#define glMapGrid2d pl_glMapGrid2d
typedef void (APIENTRYP PFNGLMAPGRID2DPROC)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
GLAPI PFNGLMAPGRID2DPROC pl_glMapGrid2d;

#define glMapGrid2f pl_glMapGrid2f
typedef void (APIENTRYP PFNGLMAPGRID2FPROC)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
GLAPI PFNGLMAPGRID2FPROC pl_glMapGrid2f;

#define glEvalCoord1d pl_glEvalCoord1d
typedef void (APIENTRYP PFNGLEVALCOORD1DPROC)(GLdouble u);
GLAPI PFNGLEVALCOORD1DPROC pl_glEvalCoord1d;

#define glEvalCoord1dv pl_glEvalCoord1dv
typedef void (APIENTRYP PFNGLEVALCOORD1DVPROC)(const GLdouble* u);
GLAPI PFNGLEVALCOORD1DVPROC pl_glEvalCoord1dv;

#define glEvalCoord1f pl_glEvalCoord1f
typedef void (APIENTRYP PFNGLEVALCOORD1FPROC)(GLfloat u);
GLAPI PFNGLEVALCOORD1FPROC pl_glEvalCoord1f;

#define glEvalCoord1fv pl_glEvalCoord1fv
typedef void (APIENTRYP PFNGLEVALCOORD1FVPROC)(const GLfloat* u);
GLAPI PFNGLEVALCOORD1FVPROC pl_glEvalCoord1fv;

#define glEvalCoord2d pl_glEvalCoord2d
typedef void (APIENTRYP PFNGLEVALCOORD2DPROC)(GLdouble u, GLdouble v);
GLAPI PFNGLEVALCOORD2DPROC pl_glEvalCoord2d;

#define glEvalCoord2dv pl_glEvalCoord2dv
typedef void (APIENTRYP PFNGLEVALCOORD2DVPROC)(const GLdouble* u);
GLAPI PFNGLEVALCOORD2DVPROC pl_glEvalCoord2dv;

#define glEvalCoord2f pl_glEvalCoord2f
typedef void (APIENTRYP PFNGLEVALCOORD2FPROC)(GLfloat u, GLfloat v);
GLAPI PFNGLEVALCOORD2FPROC pl_glEvalCoord2f;

#define glEvalCoord2fv pl_glEvalCoord2fv
typedef void (APIENTRYP PFNGLEVALCOORD2FVPROC)(const GLfloat* u);
GLAPI PFNGLEVALCOORD2FVPROC pl_glEvalCoord2fv;

#define glEvalMesh1 pl_glEvalMesh1
typedef void (APIENTRYP PFNGLEVALMESH1PROC)(GLenum mode, GLint i1, GLint i2);
GLAPI PFNGLEVALMESH1PROC pl_glEvalMesh1;

#define glEvalPoint1 pl_glEvalPoint1
typedef void (APIENTRYP PFNGLEVALPOINT1PROC)(GLint i);
GLAPI PFNGLEVALPOINT1PROC pl_glEvalPoint1;

#define glEvalMesh2 pl_glEvalMesh2
typedef void (APIENTRYP PFNGLEVALMESH2PROC)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
GLAPI PFNGLEVALMESH2PROC pl_glEvalMesh2;

#define glEvalPoint2 pl_glEvalPoint2
typedef void (APIENTRYP PFNGLEVALPOINT2PROC)(GLint i, GLint j);
GLAPI PFNGLEVALPOINT2PROC pl_glEvalPoint2;

#define glAlphaFunc pl_glAlphaFunc
typedef void (APIENTRYP PFNGLALPHAFUNCPROC)(GLenum func, GLfloat ref);
GLAPI PFNGLALPHAFUNCPROC pl_glAlphaFunc;

#define glPixelZoom pl_glPixelZoom
typedef void (APIENTRYP PFNGLPIXELZOOMPROC)(GLfloat xfactor, GLfloat yfactor);
GLAPI PFNGLPIXELZOOMPROC pl_glPixelZoom;

#define glPixelTransferf pl_glPixelTransferf
typedef void (APIENTRYP PFNGLPIXELTRANSFERFPROC)(GLenum pname, GLfloat param);
GLAPI PFNGLPIXELTRANSFERFPROC pl_glPixelTransferf;

#define glPixelTransferi pl_glPixelTransferi
typedef void (APIENTRYP PFNGLPIXELTRANSFERIPROC)(GLenum pname, GLint param);
GLAPI PFNGLPIXELTRANSFERIPROC pl_glPixelTransferi;

#define glPixelMapfv pl_glPixelMapfv
typedef void (APIENTRYP PFNGLPIXELMAPFVPROC)(GLenum map, GLsizei mapsize, const GLfloat* values);
GLAPI PFNGLPIXELMAPFVPROC pl_glPixelMapfv;

#define glPixelMapuiv pl_glPixelMapuiv
typedef void (APIENTRYP PFNGLPIXELMAPUIVPROC)(GLenum map, GLsizei mapsize, const GLuint* values);
GLAPI PFNGLPIXELMAPUIVPROC pl_glPixelMapuiv;

#define glPixelMapusv pl_glPixelMapusv
typedef void (APIENTRYP PFNGLPIXELMAPUSVPROC)(GLenum map, GLsizei mapsize, const GLushort* values);
GLAPI PFNGLPIXELMAPUSVPROC pl_glPixelMapusv;

#define glCopyPixels pl_glCopyPixels
typedef void (APIENTRYP PFNGLCOPYPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
GLAPI PFNGLCOPYPIXELSPROC pl_glCopyPixels;

#define glDrawPixels pl_glDrawPixels
typedef void (APIENTRYP PFNGLDRAWPIXELSPROC)(GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels);
GLAPI PFNGLDRAWPIXELSPROC pl_glDrawPixels;

#define glGetClipPlane pl_glGetClipPlane
typedef void (APIENTRYP PFNGLGETCLIPPLANEPROC)(GLenum plane, GLdouble* equation);
GLAPI PFNGLGETCLIPPLANEPROC pl_glGetClipPlane;

#define glGetLightfv pl_glGetLightfv
typedef void (APIENTRYP PFNGLGETLIGHTFVPROC)(GLenum light, GLenum pname, GLfloat* params);
GLAPI PFNGLGETLIGHTFVPROC pl_glGetLightfv;

#define glGetLightiv pl_glGetLightiv
typedef void (APIENTRYP PFNGLGETLIGHTIVPROC)(GLenum light, GLenum pname, GLint* params);
GLAPI PFNGLGETLIGHTIVPROC pl_glGetLightiv;

#define glGetMapdv pl_glGetMapdv
typedef void (APIENTRYP PFNGLGETMAPDVPROC)(GLenum target, GLenum query, GLdouble* v);
GLAPI PFNGLGETMAPDVPROC pl_glGetMapdv;

#define glGetMapfv pl_glGetMapfv
typedef void (APIENTRYP PFNGLGETMAPFVPROC)(GLenum target, GLenum query, GLfloat* v);
GLAPI PFNGLGETMAPFVPROC pl_glGetMapfv;

#define glGetMapiv pl_glGetMapiv
typedef void (APIENTRYP PFNGLGETMAPIVPROC)(GLenum target, GLenum query, GLint* v);
GLAPI PFNGLGETMAPIVPROC pl_glGetMapiv;

#define glGetMaterialfv pl_glGetMaterialfv
typedef void (APIENTRYP PFNGLGETMATERIALFVPROC)(GLenum face, GLenum pname, GLfloat* params);
GLAPI PFNGLGETMATERIALFVPROC pl_glGetMaterialfv;

#define glGetMaterialiv pl_glGetMaterialiv
typedef void (APIENTRYP PFNGLGETMATERIALIVPROC)(GLenum face, GLenum pname, GLint* params);
GLAPI PFNGLGETMATERIALIVPROC pl_glGetMaterialiv;

#define glGetPixelMapfv pl_glGetPixelMapfv
typedef void (APIENTRYP PFNGLGETPIXELMAPFVPROC)(GLenum map, GLfloat* values);
GLAPI PFNGLGETPIXELMAPFVPROC pl_glGetPixelMapfv;

#define glGetPixelMapuiv pl_glGetPixelMapuiv
typedef void (APIENTRYP PFNGLGETPIXELMAPUIVPROC)(GLenum map, GLuint* values);
GLAPI PFNGLGETPIXELMAPUIVPROC pl_glGetPixelMapuiv;

#define glGetPixelMapusv pl_glGetPixelMapusv
typedef void (APIENTRYP PFNGLGETPIXELMAPUSVPROC)(GLenum map, GLushort* values);
GLAPI PFNGLGETPIXELMAPUSVPROC pl_glGetPixelMapusv;

#define glGetPolygonStipple pl_glGetPolygonStipple
typedef void (APIENTRYP PFNGLGETPOLYGONSTIPPLEPROC)(GLubyte* mask);
GLAPI PFNGLGETPOLYGONSTIPPLEPROC pl_glGetPolygonStipple;

#define glGetTexEnvfv pl_glGetTexEnvfv
typedef void (APIENTRYP PFNGLGETTEXENVFVPROC)(GLenum target, GLenum pname, GLfloat* params);
GLAPI PFNGLGETTEXENVFVPROC pl_glGetTexEnvfv;

#define glGetTexEnviv pl_glGetTexEnviv
typedef void (APIENTRYP PFNGLGETTEXENVIVPROC)(GLenum target, GLenum pname, GLint* params);
GLAPI PFNGLGETTEXENVIVPROC pl_glGetTexEnviv;

#define glGetTexGendv pl_glGetTexGendv
typedef void (APIENTRYP PFNGLGETTEXGENDVPROC)(GLenum coord, GLenum pname, GLdouble* params);
GLAPI PFNGLGETTEXGENDVPROC pl_glGetTexGendv;

#define glGetTexGenfv pl_glGetTexGenfv
typedef void (APIENTRYP PFNGLGETTEXGENFVPROC)(GLenum coord, GLenum pname, GLfloat* params);
GLAPI PFNGLGETTEXGENFVPROC pl_glGetTexGenfv;

#define glGetTexGeniv pl_glGetTexGeniv
typedef void (APIENTRYP PFNGLGETTEXGENIVPROC)(GLenum coord, GLenum pname, GLint* params);
GLAPI PFNGLGETTEXGENIVPROC pl_glGetTexGeniv;

#define glIsList pl_glIsList
typedef GLboolean (APIENTRYP PFNGLISLISTPROC)(GLuint list);
GLAPI PFNGLISLISTPROC pl_glIsList;

#define glFrustum pl_glFrustum
typedef void (APIENTRYP PFNGLFRUSTUMPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLAPI PFNGLFRUSTUMPROC pl_glFrustum;

#define glLoadIdentity pl_glLoadIdentity
typedef void (APIENTRYP PFNGLLOADIDENTITYPROC)();
GLAPI PFNGLLOADIDENTITYPROC pl_glLoadIdentity;

#define glLoadMatrixf pl_glLoadMatrixf
typedef void (APIENTRYP PFNGLLOADMATRIXFPROC)(const GLfloat* m);
GLAPI PFNGLLOADMATRIXFPROC pl_glLoadMatrixf;

#define glLoadMatrixd pl_glLoadMatrixd
typedef void (APIENTRYP PFNGLLOADMATRIXDPROC)(const GLdouble* m);
GLAPI PFNGLLOADMATRIXDPROC pl_glLoadMatrixd;

#define glMatrixMode pl_glMatrixMode
typedef void (APIENTRYP PFNGLMATRIXMODEPROC)(GLenum mode);
GLAPI PFNGLMATRIXMODEPROC pl_glMatrixMode;

#define glMultMatrixf pl_glMultMatrixf
typedef void (APIENTRYP PFNGLMULTMATRIXFPROC)(const GLfloat* m);
GLAPI PFNGLMULTMATRIXFPROC pl_glMultMatrixf;

#define glMultMatrixd pl_glMultMatrixd
typedef void (APIENTRYP PFNGLMULTMATRIXDPROC)(const GLdouble* m);
GLAPI PFNGLMULTMATRIXDPROC pl_glMultMatrixd;

#define glOrtho pl_glOrtho
typedef void (APIENTRYP PFNGLORTHOPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLAPI PFNGLORTHOPROC pl_glOrtho;

#define glPopMatrix pl_glPopMatrix
typedef void (APIENTRYP PFNGLPOPMATRIXPROC)();
GLAPI PFNGLPOPMATRIXPROC pl_glPopMatrix;

#define glPushMatrix pl_glPushMatrix
typedef void (APIENTRYP PFNGLPUSHMATRIXPROC)();
GLAPI PFNGLPUSHMATRIXPROC pl_glPushMatrix;

#define glRotated pl_glRotated
typedef void (APIENTRYP PFNGLROTATEDPROC)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLAPI PFNGLROTATEDPROC pl_glRotated;

#define glRotatef pl_glRotatef
typedef void (APIENTRYP PFNGLROTATEFPROC)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
GLAPI PFNGLROTATEFPROC pl_glRotatef;

#define glScaled pl_glScaled
typedef void (APIENTRYP PFNGLSCALEDPROC)(GLdouble x, GLdouble y, GLdouble z);
GLAPI PFNGLSCALEDPROC pl_glScaled;

#define glScalef pl_glScalef
typedef void (APIENTRYP PFNGLSCALEFPROC)(GLfloat x, GLfloat y, GLfloat z);
GLAPI PFNGLSCALEFPROC pl_glScalef;

#define glTranslated pl_glTranslated
typedef void (APIENTRYP PFNGLTRANSLATEDPROC)(GLdouble x, GLdouble y, GLdouble z);
GLAPI PFNGLTRANSLATEDPROC pl_glTranslated;

#define glTranslatef pl_glTranslatef
typedef void (APIENTRYP PFNGLTRANSLATEFPROC)(GLfloat x, GLfloat y, GLfloat z);
GLAPI PFNGLTRANSLATEFPROC pl_glTranslatef;

#define glDrawArrays pl_glDrawArrays
typedef void (APIENTRYP PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);
GLAPI PFNGLDRAWARRAYSPROC pl_glDrawArrays;

#define glDrawElements pl_glDrawElements
typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const void* indices);
GLAPI PFNGLDRAWELEMENTSPROC pl_glDrawElements;

#define glGetPointerv pl_glGetPointerv
typedef void (APIENTRYP PFNGLGETPOINTERVPROC)(GLenum pname, void* params);
GLAPI PFNGLGETPOINTERVPROC pl_glGetPointerv;

#define glPolygonOffset pl_glPolygonOffset
typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);
GLAPI PFNGLPOLYGONOFFSETPROC pl_glPolygonOffset;

#define glCopyTexImage1D pl_glCopyTexImage1D
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLAPI PFNGLCOPYTEXIMAGE1DPROC pl_glCopyTexImage1D;

#define glCopyTexImage2D pl_glCopyTexImage2D
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLAPI PFNGLCOPYTEXIMAGE2DPROC pl_glCopyTexImage2D;

#define glCopyTexSubImage1D pl_glCopyTexSubImage1D
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLAPI PFNGLCOPYTEXSUBIMAGE1DPROC pl_glCopyTexSubImage1D;

#define glCopyTexSubImage2D pl_glCopyTexSubImage2D
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI PFNGLCOPYTEXSUBIMAGE2DPROC pl_glCopyTexSubImage2D;

#define glTexSubImage1D pl_glTexSubImage1D
typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void* pixels);
GLAPI PFNGLTEXSUBIMAGE1DPROC pl_glTexSubImage1D;

#define glTexSubImage2D pl_glTexSubImage2D
typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels);
GLAPI PFNGLTEXSUBIMAGE2DPROC pl_glTexSubImage2D;

#define glBindTexture pl_glBindTexture
typedef void (APIENTRYP PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);
GLAPI PFNGLBINDTEXTUREPROC pl_glBindTexture;

#define glDeleteTextures pl_glDeleteTextures
typedef void (APIENTRYP PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint* textures);
GLAPI PFNGLDELETETEXTURESPROC pl_glDeleteTextures;

#define glGenTextures pl_glGenTextures
typedef void (APIENTRYP PFNGLGENTEXTURESPROC)(GLsizei n, GLuint* textures);
GLAPI PFNGLGENTEXTURESPROC pl_glGenTextures;

#define glIsTexture pl_glIsTexture
typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC)(GLuint texture);
GLAPI PFNGLISTEXTUREPROC pl_glIsTexture;

#define glArrayElement pl_glArrayElement
typedef void (APIENTRYP PFNGLARRAYELEMENTPROC)(GLint i);
GLAPI PFNGLARRAYELEMENTPROC pl_glArrayElement;

#define glColorPointer pl_glColorPointer
typedef void (APIENTRYP PFNGLCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void* pointer);
GLAPI PFNGLCOLORPOINTERPROC pl_glColorPointer;

#define glDisableClientState pl_glDisableClientState
typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEPROC)(GLenum array);
GLAPI PFNGLDISABLECLIENTSTATEPROC pl_glDisableClientState;

#define glEdgeFlagPointer pl_glEdgeFlagPointer
typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERPROC)(GLsizei stride, const void* pointer);
GLAPI PFNGLEDGEFLAGPOINTERPROC pl_glEdgeFlagPointer;

#define glEnableClientState pl_glEnableClientState
typedef void (APIENTRYP PFNGLENABLECLIENTSTATEPROC)(GLenum array);
GLAPI PFNGLENABLECLIENTSTATEPROC pl_glEnableClientState;

#define glIndexPointer pl_glIndexPointer
typedef void (APIENTRYP PFNGLINDEXPOINTERPROC)(GLenum type, GLsizei stride, const void* pointer);
GLAPI PFNGLINDEXPOINTERPROC pl_glIndexPointer;

#define glInterleavedArrays pl_glInterleavedArrays
typedef void (APIENTRYP PFNGLINTERLEAVEDARRAYSPROC)(GLenum format, GLsizei stride, const void* pointer);
GLAPI PFNGLINTERLEAVEDARRAYSPROC pl_glInterleavedArrays;

#define glNormalPointer pl_glNormalPointer
typedef void (APIENTRYP PFNGLNORMALPOINTERPROC)(GLenum type, GLsizei stride, const void* pointer);
GLAPI PFNGLNORMALPOINTERPROC pl_glNormalPointer;

#define glTexCoordPointer pl_glTexCoordPointer
typedef void (APIENTRYP PFNGLTEXCOORDPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void* pointer);
GLAPI PFNGLTEXCOORDPOINTERPROC pl_glTexCoordPointer;

#define glVertexPointer pl_glVertexPointer
typedef void (APIENTRYP PFNGLVERTEXPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void* pointer);
GLAPI PFNGLVERTEXPOINTERPROC pl_glVertexPointer;

#define glAreTexturesResident pl_glAreTexturesResident
typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTPROC)(GLsizei n, const GLuint* textures, GLboolean* residences);
GLAPI PFNGLARETEXTURESRESIDENTPROC pl_glAreTexturesResident;

#define glPrioritizeTextures pl_glPrioritizeTextures
typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESPROC)(GLsizei n, const GLuint* textures, const GLfloat* priorities);
GLAPI PFNGLPRIORITIZETEXTURESPROC pl_glPrioritizeTextures;

#define glIndexub pl_glIndexub
typedef void (APIENTRYP PFNGLINDEXUBPROC)(GLubyte c);
GLAPI PFNGLINDEXUBPROC pl_glIndexub;

#define glIndexubv pl_glIndexubv
typedef void (APIENTRYP PFNGLINDEXUBVPROC)(const GLubyte* c);
GLAPI PFNGLINDEXUBVPROC pl_glIndexubv;

#define glPopClientAttrib pl_glPopClientAttrib
typedef void (APIENTRYP PFNGLPOPCLIENTATTRIBPROC)();
GLAPI PFNGLPOPCLIENTATTRIBPROC pl_glPopClientAttrib;

#define glPushClientAttrib pl_glPushClientAttrib
typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBPROC)(GLbitfield mask);
GLAPI PFNGLPUSHCLIENTATTRIBPROC pl_glPushClientAttrib;

#define glDrawRangeElements pl_glDrawRangeElements
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void* indices);
GLAPI PFNGLDRAWRANGEELEMENTSPROC pl_glDrawRangeElements;

#define glTexImage3D pl_glTexImage3D
typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void* pixels);
GLAPI PFNGLTEXIMAGE3DPROC pl_glTexImage3D;

#define glTexSubImage3D pl_glTexSubImage3D
typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void* pixels);
GLAPI PFNGLTEXSUBIMAGE3DPROC pl_glTexSubImage3D;

#define glCopyTexSubImage3D pl_glCopyTexSubImage3D
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI PFNGLCOPYTEXSUBIMAGE3DPROC pl_glCopyTexSubImage3D;

#define glActiveTexture pl_glActiveTexture
typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC)(GLenum texture);
GLAPI PFNGLACTIVETEXTUREPROC pl_glActiveTexture;

#define glSampleCoverage pl_glSampleCoverage
typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);
GLAPI PFNGLSAMPLECOVERAGEPROC pl_glSampleCoverage;

#define glCompressedTexImage3D pl_glCompressedTexImage3D
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void* data);
GLAPI PFNGLCOMPRESSEDTEXIMAGE3DPROC pl_glCompressedTexImage3D;

#define glCompressedTexImage2D pl_glCompressedTexImage2D
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void* data);
GLAPI PFNGLCOMPRESSEDTEXIMAGE2DPROC pl_glCompressedTexImage2D;

#define glCompressedTexImage1D pl_glCompressedTexImage1D
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void* data);
GLAPI PFNGLCOMPRESSEDTEXIMAGE1DPROC pl_glCompressedTexImage1D;

#define glCompressedTexSubImage3D pl_glCompressedTexSubImage3D
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void* data);
GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC pl_glCompressedTexSubImage3D;

#define glCompressedTexSubImage2D pl_glCompressedTexSubImage2D
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void* data);
GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC pl_glCompressedTexSubImage2D;

#define glCompressedTexSubImage1D pl_glCompressedTexSubImage1D
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void* data);
GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC pl_glCompressedTexSubImage1D;

#define glGetCompressedTexImage pl_glGetCompressedTexImage
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint level, void* img);
GLAPI PFNGLGETCOMPRESSEDTEXIMAGEPROC pl_glGetCompressedTexImage;

#define glClientActiveTexture pl_glClientActiveTexture
typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC)(GLenum texture);
GLAPI PFNGLCLIENTACTIVETEXTUREPROC pl_glClientActiveTexture;

#define glMultiTexCoord1d pl_glMultiTexCoord1d
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC)(GLenum target, GLdouble s);
GLAPI PFNGLMULTITEXCOORD1DPROC pl_glMultiTexCoord1d;

#define glMultiTexCoord1dv pl_glMultiTexCoord1dv
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC)(GLenum target, const GLdouble* v);
GLAPI PFNGLMULTITEXCOORD1DVPROC pl_glMultiTexCoord1dv;

#define glMultiTexCoord1f pl_glMultiTexCoord1f
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC)(GLenum target, GLfloat s);
GLAPI PFNGLMULTITEXCOORD1FPROC pl_glMultiTexCoord1f;

#define glMultiTexCoord1fv pl_glMultiTexCoord1fv
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC)(GLenum target, const GLfloat* v);
GLAPI PFNGLMULTITEXCOORD1FVPROC pl_glMultiTexCoord1fv;

#define glMultiTexCoord1i pl_glMultiTexCoord1i
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC)(GLenum target, GLint s);
GLAPI PFNGLMULTITEXCOORD1IPROC pl_glMultiTexCoord1i;

#define glMultiTexCoord1iv pl_glMultiTexCoord1iv
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC)(GLenum target, const GLint* v);
GLAPI PFNGLMULTITEXCOORD1IVPROC pl_glMultiTexCoord1iv;

#define glMultiTexCoord1s pl_glMultiTexCoord1s
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC)(GLenum target, GLshort s);
GLAPI PFNGLMULTITEXCOORD1SPROC pl_glMultiTexCoord1s;

#define glMultiTexCoord1sv pl_glMultiTexCoord1sv
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC)(GLenum target, const GLshort* v);
GLAPI PFNGLMULTITEXCOORD1SVPROC pl_glMultiTexCoord1sv;

#define glMultiTexCoord2d pl_glMultiTexCoord2d
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC)(GLenum target, GLdouble s, GLdouble t);
GLAPI PFNGLMULTITEXCOORD2DPROC pl_glMultiTexCoord2d;

#define glMultiTexCoord2dv pl_glMultiTexCoord2dv
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC)(GLenum target, const GLdouble* v);
GLAPI PFNGLMULTITEXCOORD2DVPROC pl_glMultiTexCoord2dv;

#define glMultiTexCoord2f pl_glMultiTexCoord2f
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC)(GLenum target, GLfloat s, GLfloat t);
GLAPI PFNGLMULTITEXCOORD2FPROC pl_glMultiTexCoord2f;

#define glMultiTexCoord2fv pl_glMultiTexCoord2fv
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC)(GLenum target, const GLfloat* v);
GLAPI PFNGLMULTITEXCOORD2FVPROC pl_glMultiTexCoord2fv;

#define glMultiTexCoord2i pl_glMultiTexCoord2i
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC)(GLenum target, GLint s, GLint t);
GLAPI PFNGLMULTITEXCOORD2IPROC pl_glMultiTexCoord2i;

#define glMultiTexCoord2iv pl_glMultiTexCoord2iv
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC)(GLenum target, const GLint* v);
GLAPI PFNGLMULTITEXCOORD2IVPROC pl_glMultiTexCoord2iv;

#define glMultiTexCoord2s pl_glMultiTexCoord2s
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC)(GLenum target, GLshort s, GLshort t);
GLAPI PFNGLMULTITEXCOORD2SPROC pl_glMultiTexCoord2s;

#define glMultiTexCoord2sv pl_glMultiTexCoord2sv
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC)(GLenum target, const GLshort* v);
GLAPI PFNGLMULTITEXCOORD2SVPROC pl_glMultiTexCoord2sv;

#define glMultiTexCoord3d pl_glMultiTexCoord3d
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
GLAPI PFNGLMULTITEXCOORD3DPROC pl_glMultiTexCoord3d;

#define glMultiTexCoord3dv pl_glMultiTexCoord3dv
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC)(GLenum target, const GLdouble* v);
GLAPI PFNGLMULTITEXCOORD3DVPROC pl_glMultiTexCoord3dv;

#define glMultiTexCoord3f pl_glMultiTexCoord3f
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
GLAPI PFNGLMULTITEXCOORD3FPROC pl_glMultiTexCoord3f;

#define glMultiTexCoord3fv pl_glMultiTexCoord3fv
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC)(GLenum target, const GLfloat* v);
GLAPI PFNGLMULTITEXCOORD3FVPROC pl_glMultiTexCoord3fv;

#define glMultiTexCoord3i pl_glMultiTexCoord3i
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC)(GLenum target, GLint s, GLint t, GLint r);
GLAPI PFNGLMULTITEXCOORD3IPROC pl_glMultiTexCoord3i;

#define glMultiTexCoord3iv pl_glMultiTexCoord3iv
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC)(GLenum target, const GLint* v);
GLAPI PFNGLMULTITEXCOORD3IVPROC pl_glMultiTexCoord3iv;

#define glMultiTexCoord3s pl_glMultiTexCoord3s
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC)(GLenum target, GLshort s, GLshort t, GLshort r);
GLAPI PFNGLMULTITEXCOORD3SPROC pl_glMultiTexCoord3s;

#define glMultiTexCoord3sv pl_glMultiTexCoord3sv
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC)(GLenum target, const GLshort* v);
GLAPI PFNGLMULTITEXCOORD3SVPROC pl_glMultiTexCoord3sv;

#define glMultiTexCoord4d pl_glMultiTexCoord4d
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLAPI PFNGLMULTITEXCOORD4DPROC pl_glMultiTexCoord4d;

#define glMultiTexCoord4dv pl_glMultiTexCoord4dv
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC)(GLenum target, const GLdouble* v);
GLAPI PFNGLMULTITEXCOORD4DVPROC pl_glMultiTexCoord4dv;

#define glMultiTexCoord4f pl_glMultiTexCoord4f
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLAPI PFNGLMULTITEXCOORD4FPROC pl_glMultiTexCoord4f;

#define glMultiTexCoord4fv pl_glMultiTexCoord4fv
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC)(GLenum target, const GLfloat* v);
GLAPI PFNGLMULTITEXCOORD4FVPROC pl_glMultiTexCoord4fv;

#define glMultiTexCoord4i pl_glMultiTexCoord4i
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC)(GLenum target, GLint s, GLint t, GLint r, GLint q);
GLAPI PFNGLMULTITEXCOORD4IPROC pl_glMultiTexCoord4i;

#define glMultiTexCoord4iv pl_glMultiTexCoord4iv
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC)(GLenum target, const GLint* v);
GLAPI PFNGLMULTITEXCOORD4IVPROC pl_glMultiTexCoord4iv;

#define glMultiTexCoord4s pl_glMultiTexCoord4s
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
GLAPI PFNGLMULTITEXCOORD4SPROC pl_glMultiTexCoord4s;

#define glMultiTexCoord4sv pl_glMultiTexCoord4sv
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC)(GLenum target, const GLshort* v);
GLAPI PFNGLMULTITEXCOORD4SVPROC pl_glMultiTexCoord4sv;

#define glLoadTransposeMatrixf pl_glLoadTransposeMatrixf
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC)(const GLfloat* m);
GLAPI PFNGLLOADTRANSPOSEMATRIXFPROC pl_glLoadTransposeMatrixf;

#define glLoadTransposeMatrixd pl_glLoadTransposeMatrixd
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC)(const GLdouble* m);
GLAPI PFNGLLOADTRANSPOSEMATRIXDPROC pl_glLoadTransposeMatrixd;

#define glMultTransposeMatrixf pl_glMultTransposeMatrixf
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC)(const GLfloat* m);
GLAPI PFNGLMULTTRANSPOSEMATRIXFPROC pl_glMultTransposeMatrixf;

#define glMultTransposeMatrixd pl_glMultTransposeMatrixd
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC)(const GLdouble* m);
GLAPI PFNGLMULTTRANSPOSEMATRIXDPROC pl_glMultTransposeMatrixd;

#define glBlendFuncSeparate pl_glBlendFuncSeparate
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLAPI PFNGLBLENDFUNCSEPARATEPROC pl_glBlendFuncSeparate;

#define glMultiDrawArrays pl_glMultiDrawArrays
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC)(GLenum mode, const GLint* first, const GLsizei* count, GLsizei drawcount);
GLAPI PFNGLMULTIDRAWARRAYSPROC pl_glMultiDrawArrays;

#define glMultiDrawElements pl_glMultiDrawElements
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode, const GLsizei* count, GLenum type, const void* indices, GLsizei drawcount);
GLAPI PFNGLMULTIDRAWELEMENTSPROC pl_glMultiDrawElements;

#define glPointParameterf pl_glPointParameterf
typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);
GLAPI PFNGLPOINTPARAMETERFPROC pl_glPointParameterf;

#define glPointParameterfv pl_glPointParameterfv
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat* params);
GLAPI PFNGLPOINTPARAMETERFVPROC pl_glPointParameterfv;

#define glPointParameteri pl_glPointParameteri
typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);
GLAPI PFNGLPOINTPARAMETERIPROC pl_glPointParameteri;

#define glPointParameteriv pl_glPointParameteriv
typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC)(GLenum pname, const GLint* params);
GLAPI PFNGLPOINTPARAMETERIVPROC pl_glPointParameteriv;

#define glFogCoordf pl_glFogCoordf
typedef void (APIENTRYP PFNGLFOGCOORDFPROC)(GLfloat coord);
GLAPI PFNGLFOGCOORDFPROC pl_glFogCoordf;

#define glFogCoordfv pl_glFogCoordfv
typedef void (APIENTRYP PFNGLFOGCOORDFVPROC)(const GLfloat* coord);
GLAPI PFNGLFOGCOORDFVPROC pl_glFogCoordfv;

#define glFogCoordd pl_glFogCoordd
typedef void (APIENTRYP PFNGLFOGCOORDDPROC)(GLdouble coord);
GLAPI PFNGLFOGCOORDDPROC pl_glFogCoordd;

#define glFogCoorddv pl_glFogCoorddv
typedef void (APIENTRYP PFNGLFOGCOORDDVPROC)(const GLdouble* coord);
GLAPI PFNGLFOGCOORDDVPROC pl_glFogCoorddv;

#define glFogCoordPointer pl_glFogCoordPointer
typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC)(GLenum type, GLsizei stride, const void* pointer);
GLAPI PFNGLFOGCOORDPOINTERPROC pl_glFogCoordPointer;

#define glSecondaryColor3b pl_glSecondaryColor3b
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);
GLAPI PFNGLSECONDARYCOLOR3BPROC pl_glSecondaryColor3b;

#define glSecondaryColor3bv pl_glSecondaryColor3bv
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC)(const GLbyte* v);
GLAPI PFNGLSECONDARYCOLOR3BVPROC pl_glSecondaryColor3bv;

#define glSecondaryColor3d pl_glSecondaryColor3d
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);
GLAPI PFNGLSECONDARYCOLOR3DPROC pl_glSecondaryColor3d;

#define glSecondaryColor3dv pl_glSecondaryColor3dv
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC)(const GLdouble* v);
GLAPI PFNGLSECONDARYCOLOR3DVPROC pl_glSecondaryColor3dv;

#define glSecondaryColor3f pl_glSecondaryColor3f
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);
GLAPI PFNGLSECONDARYCOLOR3FPROC pl_glSecondaryColor3f;

#define glSecondaryColor3fv pl_glSecondaryColor3fv
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC)(const GLfloat* v);
GLAPI PFNGLSECONDARYCOLOR3FVPROC pl_glSecondaryColor3fv;

#define glSecondaryColor3i pl_glSecondaryColor3i
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC)(GLint red, GLint green, GLint blue);
GLAPI PFNGLSECONDARYCOLOR3IPROC pl_glSecondaryColor3i;

#define glSecondaryColor3iv pl_glSecondaryColor3iv
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC)(const GLint* v);
GLAPI PFNGLSECONDARYCOLOR3IVPROC pl_glSecondaryColor3iv;

#define glSecondaryColor3s pl_glSecondaryColor3s
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);
GLAPI PFNGLSECONDARYCOLOR3SPROC pl_glSecondaryColor3s;

#define glSecondaryColor3sv pl_glSecondaryColor3sv
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC)(const GLshort* v);
GLAPI PFNGLSECONDARYCOLOR3SVPROC pl_glSecondaryColor3sv;

#define glSecondaryColor3ub pl_glSecondaryColor3ub
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);
GLAPI PFNGLSECONDARYCOLOR3UBPROC pl_glSecondaryColor3ub;

#define glSecondaryColor3ubv pl_glSecondaryColor3ubv
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC)(const GLubyte* v);
GLAPI PFNGLSECONDARYCOLOR3UBVPROC pl_glSecondaryColor3ubv;

#define glSecondaryColor3ui pl_glSecondaryColor3ui
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);
GLAPI PFNGLSECONDARYCOLOR3UIPROC pl_glSecondaryColor3ui;

#define glSecondaryColor3uiv pl_glSecondaryColor3uiv
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC)(const GLuint* v);
GLAPI PFNGLSECONDARYCOLOR3UIVPROC pl_glSecondaryColor3uiv;

#define glSecondaryColor3us pl_glSecondaryColor3us
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);
GLAPI PFNGLSECONDARYCOLOR3USPROC pl_glSecondaryColor3us;

#define glSecondaryColor3usv pl_glSecondaryColor3usv
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC)(const GLushort* v);
GLAPI PFNGLSECONDARYCOLOR3USVPROC pl_glSecondaryColor3usv;

#define glSecondaryColorPointer pl_glSecondaryColorPointer
typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void* pointer);
GLAPI PFNGLSECONDARYCOLORPOINTERPROC pl_glSecondaryColorPointer;

#define glWindowPos2d pl_glWindowPos2d
typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC)(GLdouble x, GLdouble y);
GLAPI PFNGLWINDOWPOS2DPROC pl_glWindowPos2d;

#define glWindowPos2dv pl_glWindowPos2dv
typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC)(const GLdouble* v);
GLAPI PFNGLWINDOWPOS2DVPROC pl_glWindowPos2dv;

#define glWindowPos2f pl_glWindowPos2f
typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC)(GLfloat x, GLfloat y);
GLAPI PFNGLWINDOWPOS2FPROC pl_glWindowPos2f;

#define glWindowPos2fv pl_glWindowPos2fv
typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC)(const GLfloat* v);
GLAPI PFNGLWINDOWPOS2FVPROC pl_glWindowPos2fv;

#define glWindowPos2i pl_glWindowPos2i
typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC)(GLint x, GLint y);
GLAPI PFNGLWINDOWPOS2IPROC pl_glWindowPos2i;

#define glWindowPos2iv pl_glWindowPos2iv
typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC)(const GLint* v);
GLAPI PFNGLWINDOWPOS2IVPROC pl_glWindowPos2iv;

#define glWindowPos2s pl_glWindowPos2s
typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC)(GLshort x, GLshort y);
GLAPI PFNGLWINDOWPOS2SPROC pl_glWindowPos2s;

#define glWindowPos2sv pl_glWindowPos2sv
typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC)(const GLshort* v);
GLAPI PFNGLWINDOWPOS2SVPROC pl_glWindowPos2sv;

#define glWindowPos3d pl_glWindowPos3d
typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);
GLAPI PFNGLWINDOWPOS3DPROC pl_glWindowPos3d;

#define glWindowPos3dv pl_glWindowPos3dv
typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC)(const GLdouble* v);
GLAPI PFNGLWINDOWPOS3DVPROC pl_glWindowPos3dv;

#define glWindowPos3f pl_glWindowPos3f
typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);
GLAPI PFNGLWINDOWPOS3FPROC pl_glWindowPos3f;

#define glWindowPos3fv pl_glWindowPos3fv
typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC)(const GLfloat* v);
GLAPI PFNGLWINDOWPOS3FVPROC pl_glWindowPos3fv;

#define glWindowPos3i pl_glWindowPos3i
typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC)(GLint x, GLint y, GLint z);
GLAPI PFNGLWINDOWPOS3IPROC pl_glWindowPos3i;

#define glWindowPos3iv pl_glWindowPos3iv
typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC)(const GLint* v);
GLAPI PFNGLWINDOWPOS3IVPROC pl_glWindowPos3iv;

#define glWindowPos3s pl_glWindowPos3s
typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC)(GLshort x, GLshort y, GLshort z);
GLAPI PFNGLWINDOWPOS3SPROC pl_glWindowPos3s;

#define glWindowPos3sv pl_glWindowPos3sv
typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC)(const GLshort* v);
GLAPI PFNGLWINDOWPOS3SVPROC pl_glWindowPos3sv;

#define glGenQueries pl_glGenQueries
typedef void (APIENTRYP PFNGLGENQUERIESPROC)(GLsizei n, GLuint* ids);
GLAPI PFNGLGENQUERIESPROC pl_glGenQueries;

#define glDeleteQueries pl_glDeleteQueries
typedef void (APIENTRYP PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint* ids);
GLAPI PFNGLDELETEQUERIESPROC pl_glDeleteQueries;

#define glIsQuery pl_glIsQuery
typedef GLboolean (APIENTRYP PFNGLISQUERYPROC)(GLuint id);
GLAPI PFNGLISQUERYPROC pl_glIsQuery;

#define glBeginQuery pl_glBeginQuery
typedef void (APIENTRYP PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);
GLAPI PFNGLBEGINQUERYPROC pl_glBeginQuery;

#define glEndQuery pl_glEndQuery
typedef void (APIENTRYP PFNGLENDQUERYPROC)(GLenum target);
GLAPI PFNGLENDQUERYPROC pl_glEndQuery;

#define glGetQueryiv pl_glGetQueryiv
typedef void (APIENTRYP PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname, GLint* params);
GLAPI PFNGLGETQUERYIVPROC pl_glGetQueryiv;

#define glGetQueryObjectiv pl_glGetQueryObjectiv
typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC)(GLuint id, GLenum pname, GLint* params);
GLAPI PFNGLGETQUERYOBJECTIVPROC pl_glGetQueryObjectiv;

#define glGetQueryObjectuiv pl_glGetQueryObjectuiv
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname, GLuint* params);
GLAPI PFNGLGETQUERYOBJECTUIVPROC pl_glGetQueryObjectuiv;

#define glBindBuffer pl_glBindBuffer
typedef void (APIENTRYP PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);
GLAPI PFNGLBINDBUFFERPROC pl_glBindBuffer;

#define glDeleteBuffers pl_glDeleteBuffers
typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint* buffers);
GLAPI PFNGLDELETEBUFFERSPROC pl_glDeleteBuffers;

#define glGenBuffers pl_glGenBuffers
typedef void (APIENTRYP PFNGLGENBUFFERSPROC)(GLsizei n, GLuint* buffers);
GLAPI PFNGLGENBUFFERSPROC pl_glGenBuffers;

#define glIsBuffer pl_glIsBuffer
typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC)(GLuint buffer);
GLAPI PFNGLISBUFFERPROC pl_glIsBuffer;

#define glBufferData pl_glBufferData
typedef void (APIENTRYP PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const void* data, GLenum usage);
GLAPI PFNGLBUFFERDATAPROC pl_glBufferData;

#define glBufferSubData pl_glBufferSubData
typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const void* data);
GLAPI PFNGLBUFFERSUBDATAPROC pl_glBufferSubData;

#define glGetBufferSubData pl_glGetBufferSubData
typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, void* data);
GLAPI PFNGLGETBUFFERSUBDATAPROC pl_glGetBufferSubData;

#define glMapBuffer pl_glMapBuffer
typedef void  (APIENTRYP PFNGLMAPBUFFERPROC)(GLenum target, GLenum access);
GLAPI PFNGLMAPBUFFERPROC pl_glMapBuffer;

#define glUnmapBuffer pl_glUnmapBuffer
typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC)(GLenum target);
GLAPI PFNGLUNMAPBUFFERPROC pl_glUnmapBuffer;

#define glGetBufferParameteriv pl_glGetBufferParameteriv
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint* params);
GLAPI PFNGLGETBUFFERPARAMETERIVPROC pl_glGetBufferParameteriv;

#define glGetBufferPointerv pl_glGetBufferPointerv
typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname, void* params);
GLAPI PFNGLGETBUFFERPOINTERVPROC pl_glGetBufferPointerv;

typedef void* (APIENTRYP PFNGLGETPROCADDRESSPROC)(const char* name);

static inline void pl_load_gl();

#ifdef PENGOL_IMPL

static PFNGLCLEARPROC pl_glClear;
static PFNGLCLEARCOLORPROC pl_glClearColor;
static PFNGLCLEARDEPTHPROC pl_glClearDepth;
static PFNGLENABLEPROC pl_glEnable;
static PFNGLBLENDFUNCPROC pl_glBlendFunc;
static PFNGLDEPTHFUNCPROC pl_glDepthFunc;
static PFNGLGETERRORPROC pl_glGetError;
static PFNGLVIEWPORTPROC pl_glViewport;
static PFNGLLOADMATRIXFPROC pl_glLoadMatrixf;
static PFNGLMATRIXMODEPROC pl_glMatrixMode;
static PFNGLMULTMATRIXFPROC pl_glMultMatrixf;
static PFNGLPUSHMATRIXPROC pl_glPushMatrix;
static PFNGLDRAWARRAYSPROC pl_glDrawArrays;
static PFNGLDRAWELEMENTSPROC pl_glDrawElements;
static PFNGLBINDTEXTUREPROC pl_glBindTexture;
static PFNGLDISABLECLIENTSTATEPROC pl_glDisableClientState;
static PFNGLENABLECLIENTSTATEPROC pl_glEnableClientState;
static PFNGLTEXCOORDPOINTERPROC pl_glTexCoordPointer;
static PFNGLVERTEXPOINTERPROC pl_glVertexPointer;
static PFNGLBINDBUFFERPROC pl_glBindBuffer;
static PFNGLGENBUFFERSPROC pl_glGenBuffers;
static PFNGLBUFFERDATAPROC pl_glBufferData;

static void* _pl_gl_lib;
static PFNGLGETPROCADDRESSPROC _pl_get_proc_address;

static inline void* pl_get_proc_address(const char* name)
{
	void* r = _pl_get_proc_address(name);

	if (!r)
	{
		#ifdef _WIN32
			r = GetProcAddress(_pl_gl_lib, name);
		#endif
	}

	return r;
}

static inline void pl_load_gl()
{
	#ifdef _WIN32
		_pl_gl_lib = LoadLibraryA("opengl32.dll");
		_pl_get_proc_address = (PFNGLGETPROCADDRESSPROC)GetProcAddress(_pl_gl_lib, "wglGetProcAddress");
	#endif

	pl_glClear = (PFNGLCLEARPROC)pl_get_proc_address("glClear");
	pl_glClearColor = (PFNGLCLEARCOLORPROC)pl_get_proc_address("glClearColor");
	pl_glClearDepth = (PFNGLCLEARDEPTHPROC)pl_get_proc_address("glClearDepth");
	pl_glEnable = (PFNGLENABLEPROC)pl_get_proc_address("glEnable");
	pl_glBlendFunc = (PFNGLBLENDFUNCPROC)pl_get_proc_address("glBlendFunc");
	pl_glDepthFunc = (PFNGLDEPTHFUNCPROC)pl_get_proc_address("glDepthFunc");
	pl_glGetError = (PFNGLGETERRORPROC)pl_get_proc_address("glGetError");
	pl_glViewport = (PFNGLVIEWPORTPROC)pl_get_proc_address("glViewport");
	pl_glLoadMatrixf = (PFNGLLOADMATRIXFPROC)pl_get_proc_address("glLoadMatrixf");
	pl_glMatrixMode = (PFNGLMATRIXMODEPROC)pl_get_proc_address("glMatrixMode");
	pl_glMultMatrixf = (PFNGLMULTMATRIXFPROC)pl_get_proc_address("glMultMatrixf");
	pl_glPushMatrix = (PFNGLPUSHMATRIXPROC)pl_get_proc_address("glPushMatrix");
	pl_glDrawArrays = (PFNGLDRAWARRAYSPROC)pl_get_proc_address("glDrawArrays");
	pl_glDrawElements = (PFNGLDRAWELEMENTSPROC)pl_get_proc_address("glDrawElements");
	pl_glBindTexture = (PFNGLBINDTEXTUREPROC)pl_get_proc_address("glBindTexture");
	pl_glDisableClientState = (PFNGLDISABLECLIENTSTATEPROC)pl_get_proc_address("glDisableClientState");
	pl_glEnableClientState = (PFNGLENABLECLIENTSTATEPROC)pl_get_proc_address("glEnableClientState");
	pl_glTexCoordPointer = (PFNGLTEXCOORDPOINTERPROC)pl_get_proc_address("glTexCoordPointer");
	pl_glVertexPointer = (PFNGLVERTEXPOINTERPROC)pl_get_proc_address("glVertexPointer");
	pl_glBindBuffer = (PFNGLBINDBUFFERPROC)pl_get_proc_address("glBindBuffer");
	pl_glGenBuffers = (PFNGLGENBUFFERSPROC)pl_get_proc_address("glGenBuffers");
	pl_glBufferData = (PFNGLBUFFERDATAPROC)pl_get_proc_address("glBufferData");

	#ifdef _WIN32
		FreeLibrary(_pl_gl_lib);
	#endif
}
#endif

#ifdef __cplusplus
}
#endif
#endif
